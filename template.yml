Resources:
  Uploadsbucket86F42938:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicReadWrite
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - POST
              - HEAD
              - PUT
            AllowedOrigins:
              - "*"
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Uploads bucket/Resource
  UploadsbucketAllowBucketNotificationsTodevreads3fileLocalDevBranchUploadDataFunctionA6A165A19C0D3C1D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UploadDataFunction2E82FB6B
          - Arn
      Principal: s3.amazonaws.com
      SourceAccount:
        Ref: AWS::AccountId
      SourceArn:
        Fn::GetAtt:
          - Uploadsbucket86F42938
          - Arn
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Uploads bucket/AllowBucketNotificationsTodevreads3fileLocalDevBranchUploadDataFunctionA6A165A1
  UploadsbucketNotifications8DBD3ABE:
    Type: Custom::S3BucketNotifications
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691
          - Arn
      BucketName:
        Ref: Uploadsbucket86F42938
      NotificationConfiguration:
        LambdaFunctionConfigurations:
          - Events:
              - s3:ObjectCreated:*
            Filter:
              Key:
                FilterRules:
                  - Name: suffix
                    Value: csv
            LambdaFunctionArn:
              Fn::GetAtt:
                - UploadDataFunction2E82FB6B
                - Arn
      Managed: true
    DependsOn:
      - UploadsbucketAllowBucketNotificationsTodevreads3fileLocalDevBranchUploadDataFunctionA6A165A19C0D3C1D
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Uploads bucket/Notifications/Resource
  UploadDataFunctionServiceRole0AA81148:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Upload Data Function/ServiceRole/Resource
  UploadDataFunctionServiceRoleDefaultPolicy5821DD73:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Uploadsbucket86F42938
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - Uploadsbucket86F42938
                        - Arn
                    - /*
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - ":secretsmanager:"
                  - Ref: AWS::Region
                  - ":"
                  - Ref: AWS::AccountId
                  - :secret:vkd/prod/dbcreds-??????
        Version: "2012-10-17"
      PolicyName: UploadDataFunctionServiceRoleDefaultPolicy5821DD73
      Roles:
        - Ref: UploadDataFunctionServiceRole0AA81148
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Upload Data Function/ServiceRole/DefaultPolicy/Resource
  UploadDataFunction2E82FB6B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: a08b9db085f86de9dfcb9e4fed6cfe65087df1044dd65261703f95e570a95586.zip
      Role:
        Fn::GetAtt:
          - UploadDataFunctionServiceRole0AA81148
          - Arn
      Environment:
        Variables:
          S3_BUCKET_NAME:
            Ref: Uploadsbucket86F42938
          REGION:
            Ref: AWS::Region
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.main
      MemorySize: 128
      Runtime: nodejs14.x
      Timeout: 30
    DependsOn:
      - UploadDataFunctionServiceRoleDefaultPolicy5821DD73
      - UploadDataFunctionServiceRole0AA81148
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Upload Data Function/Resource
      aws:asset:path: asset.a08b9db085f86de9dfcb9e4fed6cfe65087df1044dd65261703f95e570a95586
      aws:asset:is-bundled: true
      aws:asset:property: Code
  UploadDataFunctionLogRetentionC11AAF2E:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: UploadDataFunction2E82FB6B
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Upload Data Function/LogRetention/Resource
  UploadDataFunctionInvokeServicePrincipals3amazonawscom154BF3FA:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - UploadDataFunction2E82FB6B
          - Arn
      Principal: s3.amazonaws.com
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Upload Data Function/InvokeServicePrincipal(s3.amazonaws.com)
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 6c0316fef24d0df8a9a705c77052001217d864f49af386539d01df54618cd131.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.6c0316fef24d0df8a9a705c77052001217d864f49af386539d01df54618cd131
      aws:asset:is-bundled: false
      aws:asset:property: Code
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: s3:PutBucketNotification
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      Roles:
        - Ref: BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource
  BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691:
    Type: AWS::Lambda::Function
    Properties:
      Description: AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)
      Code:
        ZipFile: |
          import boto3  # type: ignore
          import json
          import logging
          import urllib.request

          s3 = boto3.client("s3")

          CONFIGURATION_TYPES = ["TopicConfigurations", "QueueConfigurations", "LambdaFunctionConfigurations"]

          def handler(event: dict, context):
              response_status = "SUCCESS"
              error_message = ""
              try:
                  props = event["ResourceProperties"]
                  bucket = props["BucketName"]
                  notification_configuration = props["NotificationConfiguration"]
                  request_type = event["RequestType"]
                  managed = props.get('Managed', 'true').lower() == 'true'
                  stack_id = event['StackId']

                  if managed:
                    config = handle_managed(request_type, notification_configuration)
                  else:
                    config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

                  put_bucket_notification_configuration(bucket, config)
              except Exception as e:
                  logging.exception("Failed to put bucket notification configuration")
                  response_status = "FAILED"
                  error_message = f"Error: {str(e)}. "
              finally:
                  submit_response(event, context, response_status, error_message)


          def handle_managed(request_type, notification_configuration):
            if request_type == 'Delete':
              return {}
            return notification_configuration


          def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):

            # find external notifications
            external_notifications = find_external_notifications(bucket, stack_id)

            # if delete, that's all we need
            if request_type == 'Delete':
              return external_notifications

            def with_id(notification):
              notification['Id'] = f"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}"
              return notification

            # otherwise, merge external with incoming config and augment with id
            notifications = {}
            for t in CONFIGURATION_TYPES:
              external = external_notifications.get(t, [])
              incoming = [with_id(n) for n in notification_configuration.get(t, [])]
              notifications[t] = external + incoming
            return notifications


          def find_external_notifications(bucket, stack_id):
            existing_notifications = get_bucket_notification_configuration(bucket)
            external_notifications = {}
            for t in CONFIGURATION_TYPES:
              # if the notification was created by us, we know what id to expect
              # so we can filter by it.
              external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f"{stack_id}-")]

            return external_notifications


          def get_bucket_notification_configuration(bucket):
            return s3.get_bucket_notification_configuration(Bucket=bucket)


          def put_bucket_notification_configuration(bucket, notification_configuration):
            s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)


          def submit_response(event: dict, context, response_status: str, error_message: str):
              response_body = json.dumps(
                  {
                      "Status": response_status,
                      "Reason": f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",
                      "PhysicalResourceId": event.get("PhysicalResourceId") or event["LogicalResourceId"],
                      "StackId": event["StackId"],
                      "RequestId": event["RequestId"],
                      "LogicalResourceId": event["LogicalResourceId"],
                      "NoEcho": False,
                  }
              ).encode("utf-8")
              headers = {"content-type": "", "content-length": str(len(response_body))}
              try:
                  req = urllib.request.Request(url=event["ResponseURL"], headers=headers, data=response_body, method="PUT")
                  with urllib.request.urlopen(req) as response:
                      print(response.read().decode("utf-8"))
                  print("Status code: " + response.reason)
              except Exception as e:
                  print("send(..) failed executing request.urlopen(..): " + str(e))
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
          - Arn
      Runtime: python3.7
      Timeout: 300
    DependsOn:
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36
      - BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource
  CitySDKLayer253B626B:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 7ecba6ea70767f55b67ca223b28cced8578de8c0e0bd7891a9ce71d1c4637d59.zip
      CompatibleRuntimes:
        - nodejs12.x
        - nodejs14.x
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/CitySDK Layer/Resource
      aws:asset:path: asset.7ecba6ea70767f55b67ca223b28cced8578de8c0e0bd7891a9ce71d1c4637d59
      aws:asset:is-bundled: false
      aws:asset:property: Content
  helloworldfunctionServiceRole0327FCC6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/hello-world-function/ServiceRole/Resource
  helloworldfunction8252912C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 726e5447c357a17532d261b7043922091ef74fc1990b497b917ab52efeae10e3.zip
      Role:
        Fn::GetAtt:
          - helloworldfunctionServiceRole0327FCC6
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.main
      MemorySize: 128
      Runtime: nodejs14.x
      Timeout: 5
    DependsOn:
      - helloworldfunctionServiceRole0327FCC6
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/hello-world-function/Resource
      aws:asset:path: asset.726e5447c357a17532d261b7043922091ef74fc1990b497b917ab52efeae10e3
      aws:asset:is-bundled: true
      aws:asset:property: Code
  helloworldfunctionLogRetentionC4D96AEF:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: helloworldfunction8252912C
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/hello-world-function/LogRetention/Resource
  BarChartAPIFunctionServiceRole24B14B18:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Bar Chart API Function/ServiceRole/Resource
  BarChartAPIFunction8D100D69:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 7aa2ce4cb93212f67a27e68eba172ba8ba690bb6e7b65b02837ebdbcf091725d.zip
      Role:
        Fn::GetAtt:
          - BarChartAPIFunctionServiceRole24B14B18
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.bar
      MemorySize: 128
      Runtime: nodejs14.x
      Timeout: 30
    DependsOn:
      - BarChartAPIFunctionServiceRole24B14B18
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Bar Chart API Function/Resource
      aws:asset:path: asset.7aa2ce4cb93212f67a27e68eba172ba8ba690bb6e7b65b02837ebdbcf091725d
      aws:asset:is-bundled: true
      aws:asset:property: Code
  BarChartAPIFunctionLogRetention13E30958:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: BarChartAPIFunction8D100D69
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Bar Chart API Function/LogRetention/Resource
  BarChartRenderFunctionServiceRole552509B6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Bar Chart Render Function/ServiceRole/Resource
  BarChartRenderFunction240CE151:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: d8a22948e09f809353454fa84181308fd19b92708aeef973bae05307227c0c00.zip
      Role:
        Fn::GetAtt:
          - BarChartRenderFunctionServiceRole552509B6
          - Arn
      Handler: chartsRender.bar
      MemorySize: 128
      Runtime: nodejs14.x
      Timeout: 30
    DependsOn:
      - BarChartRenderFunctionServiceRole552509B6
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Bar Chart Render Function/Resource
      aws:asset:path: asset.d8a22948e09f809353454fa84181308fd19b92708aeef973bae05307227c0c00
      aws:asset:is-bundled: false
      aws:asset:property: Code
  TestCensusFunctionServiceRoleC9BF2E43:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Test Census Function/ServiceRole/Resource
  TestCensusFunctionB81B1FE4:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1e1672bca89b2b860de14b67615448d77ed0a3cc279047f6c15a949361d02434.zip
      Role:
        Fn::GetAtt:
          - TestCensusFunctionServiceRoleC9BF2E43
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.getCensus
      Layers:
        - Ref: CitySDKLayer253B626B
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - TestCensusFunctionServiceRoleC9BF2E43
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Test Census Function/Resource
      aws:asset:path: asset.1e1672bca89b2b860de14b67615448d77ed0a3cc279047f6c15a949361d02434
      aws:asset:is-bundled: true
      aws:asset:property: Code
  TestCensusFunctionLogRetention825DED69:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: TestCensusFunctionB81B1FE4
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Test Census Function/LogRetention/Resource
  TestDBFunctionServiceRole08619338:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Test DB Function/ServiceRole/Resource
  TestDBFunctionServiceRoleDefaultPolicy573EA357:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: secretsmanager:GetSecretValue
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: TestDBFunctionServiceRoleDefaultPolicy573EA357
      Roles:
        - Ref: TestDBFunctionServiceRole08619338
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Test DB Function/ServiceRole/DefaultPolicy/Resource
  TestDBFunction6436BF3A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 1e1672bca89b2b860de14b67615448d77ed0a3cc279047f6c15a949361d02434.zip
      Role:
        Fn::GetAtt:
          - TestDBFunctionServiceRole08619338
          - Arn
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.queryDB
      Layers:
        - Ref: CitySDKLayer253B626B
      MemorySize: 1024
      Runtime: nodejs14.x
      Timeout: 15
    DependsOn:
      - TestDBFunctionServiceRoleDefaultPolicy573EA357
      - TestDBFunctionServiceRole08619338
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Test DB Function/Resource
      aws:asset:path: asset.1e1672bca89b2b860de14b67615448d77ed0a3cc279047f6c15a949361d02434
      aws:asset:is-bundled: true
      aws:asset:property: Code
  TestDBFunctionLogRetention612EEE2F:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ""
          - - /aws/lambda/
            - Ref: TestDBFunction6436BF3A
      RetentionInDays: 1
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/Test DB Function/LogRetention/Resource
  devreads3fileVermontKidsData01DED27C:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: dev/read-s3-file-Vermont Kids Data
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Resource
  devreads3fileVermontKidsDataCloudWatchRoleDCDAF849:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/CloudWatchRole/Resource
  devreads3fileVermontKidsDataAccountADB7CC9C:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - devreads3fileVermontKidsDataCloudWatchRoleDCDAF849
          - Arn
    DependsOn:
      - devreads3fileVermontKidsData01DED27C
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Account
  devreads3fileVermontKidsDataDeploymentD28E36271e346cdb16f43b2d7829c01a5a2c6571:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
      Description: Automatically created by the RestApi construct
    DependsOn:
      - devreads3fileVermontKidsDatacensusGETC923D8BA
      - devreads3fileVermontKidsDatacensus7376C084
      - devreads3fileVermontKidsDatachartbarchartIdGETBB8EFE79
      - devreads3fileVermontKidsDatachartbarchartIdOPTIONSFF4B68B0
      - devreads3fileVermontKidsDatachartbarchartId2C591ADA
      - devreads3fileVermontKidsDatachartbar4E098482
      - devreads3fileVermontKidsDatachart8D8B74D5
      - devreads3fileVermontKidsDatahelloGET5155F861
      - devreads3fileVermontKidsDatahelloE148CDB4
      - devreads3fileVermontKidsDatarenderchartbarchartIdGET1C56C3EF
      - devreads3fileVermontKidsDatarenderchartbarchartIdA8E6D311
      - devreads3fileVermontKidsDatarenderchartbar431F3AF0
      - devreads3fileVermontKidsDatarenderchartE5FDCCC1
      - devreads3fileVermontKidsDatarenderAB297E5E
      - devreads3fileVermontKidsDatatestdbGET4F976894
      - devreads3fileVermontKidsDatatestdbEE500CBC
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Deployment/Resource
  devreads3fileVermontKidsDataDeploymentStageprod3644E4D3:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
      DeploymentId:
        Ref: devreads3fileVermontKidsDataDeploymentD28E36271e346cdb16f43b2d7829c01a5a2c6571
      StageName: prod
    DependsOn:
      - devreads3fileVermontKidsDataAccountADB7CC9C
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/DeploymentStage.prod/Resource
  devreads3fileVermontKidsDatahelloE148CDB4:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - devreads3fileVermontKidsData01DED27C
          - RootResourceId
      PathPart: hello
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/hello/Resource
  devreads3fileVermontKidsDatahelloGETApiPermissiondevreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABAGEThello7D85D25C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - helloworldfunction8252912C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: devreads3fileVermontKidsData01DED27C
            - /
            - Ref: devreads3fileVermontKidsDataDeploymentStageprod3644E4D3
            - /GET/hello
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/hello/GET/ApiPermission.devreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABA.GET..hello
  devreads3fileVermontKidsDatahelloGETApiPermissionTestdevreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABAGEThello2AF935A8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - helloworldfunction8252912C
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: devreads3fileVermontKidsData01DED27C
            - /test-invoke-stage/GET/hello
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/hello/GET/ApiPermission.Test.devreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABA.GET..hello
  devreads3fileVermontKidsDatahelloGET5155F861:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: devreads3fileVermontKidsDatahelloE148CDB4
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - helloworldfunction8252912C
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/hello/GET/Resource
  devreads3fileVermontKidsDatarenderAB297E5E:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - devreads3fileVermontKidsData01DED27C
          - RootResourceId
      PathPart: render
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/render/Resource
  devreads3fileVermontKidsDatarenderchartE5FDCCC1:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: devreads3fileVermontKidsDatarenderAB297E5E
      PathPart: chart
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/render/chart/Resource
  devreads3fileVermontKidsDatarenderchartbar431F3AF0:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: devreads3fileVermontKidsDatarenderchartE5FDCCC1
      PathPart: bar
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/render/chart/bar/Resource
  devreads3fileVermontKidsDatarenderchartbarchartIdA8E6D311:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: devreads3fileVermontKidsDatarenderchartbar431F3AF0
      PathPart: "{chartId}"
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/render/chart/bar/{chartId}/Resource
  devreads3fileVermontKidsDatarenderchartbarchartIdGETApiPermissiondevreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABAGETrenderchartbarchartId214B9BBC:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BarChartRenderFunction240CE151
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: devreads3fileVermontKidsData01DED27C
            - /
            - Ref: devreads3fileVermontKidsDataDeploymentStageprod3644E4D3
            - /GET/render/chart/bar/*
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/render/chart/bar/{chartId}/GET/ApiPermission.devreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABA.GET..render.chart.bar.{chartId}
  devreads3fileVermontKidsDatarenderchartbarchartIdGETApiPermissionTestdevreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABAGETrenderchartbarchartId7FCBF5EB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BarChartRenderFunction240CE151
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: devreads3fileVermontKidsData01DED27C
            - /test-invoke-stage/GET/render/chart/bar/*
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/render/chart/bar/{chartId}/GET/ApiPermission.Test.devreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABA.GET..render.chart.bar.{chartId}
  devreads3fileVermontKidsDatarenderchartbarchartIdGET1C56C3EF:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: devreads3fileVermontKidsDatarenderchartbarchartIdA8E6D311
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - BarChartRenderFunction240CE151
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/render/chart/bar/{chartId}/GET/Resource
  devreads3fileVermontKidsDatachart8D8B74D5:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - devreads3fileVermontKidsData01DED27C
          - RootResourceId
      PathPart: chart
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/chart/Resource
  devreads3fileVermontKidsDatachartbar4E098482:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: devreads3fileVermontKidsDatachart8D8B74D5
      PathPart: bar
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/chart/bar/Resource
  devreads3fileVermontKidsDatachartbarchartId2C591ADA:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: devreads3fileVermontKidsDatachartbar4E098482
      PathPart: "{chartId}"
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/chart/bar/{chartId}/Resource
  devreads3fileVermontKidsDatachartbarchartIdOPTIONSFF4B68B0:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: OPTIONS
      ResourceId:
        Ref: devreads3fileVermontKidsDatachartbarchartId2C591ADA
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
      AuthorizationType: NONE
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'GET'"
            StatusCode: "204"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
          StatusCode: "204"
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/chart/bar/{chartId}/OPTIONS/Resource
  devreads3fileVermontKidsDatachartbarchartIdGETApiPermissiondevreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABAGETchartbarchartId22F4A498:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BarChartAPIFunction8D100D69
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: devreads3fileVermontKidsData01DED27C
            - /
            - Ref: devreads3fileVermontKidsDataDeploymentStageprod3644E4D3
            - /GET/chart/bar/*
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/chart/bar/{chartId}/GET/ApiPermission.devreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABA.GET..chart.bar.{chartId}
  devreads3fileVermontKidsDatachartbarchartIdGETApiPermissionTestdevreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABAGETchartbarchartId7A6DCD75:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - BarChartAPIFunction8D100D69
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: devreads3fileVermontKidsData01DED27C
            - /test-invoke-stage/GET/chart/bar/*
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/chart/bar/{chartId}/GET/ApiPermission.Test.devreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABA.GET..chart.bar.{chartId}
  devreads3fileVermontKidsDatachartbarchartIdGETBB8EFE79:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: devreads3fileVermontKidsDatachartbarchartId2C591ADA
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - BarChartAPIFunction8D100D69
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/chart/bar/{chartId}/GET/Resource
  devreads3fileVermontKidsDatacensus7376C084:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - devreads3fileVermontKidsData01DED27C
          - RootResourceId
      PathPart: census
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/census/Resource
  devreads3fileVermontKidsDatacensusGETApiPermissiondevreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABAGETcensusD63A1E99:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TestCensusFunctionB81B1FE4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: devreads3fileVermontKidsData01DED27C
            - /
            - Ref: devreads3fileVermontKidsDataDeploymentStageprod3644E4D3
            - /GET/census
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/census/GET/ApiPermission.devreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABA.GET..census
  devreads3fileVermontKidsDatacensusGETApiPermissionTestdevreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABAGETcensusD192A0F9:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TestCensusFunctionB81B1FE4
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: devreads3fileVermontKidsData01DED27C
            - /test-invoke-stage/GET/census
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/census/GET/ApiPermission.Test.devreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABA.GET..census
  devreads3fileVermontKidsDatacensusGETC923D8BA:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: devreads3fileVermontKidsDatacensus7376C084
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - TestCensusFunctionB81B1FE4
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/census/GET/Resource
  devreads3fileVermontKidsDatatestdbEE500CBC:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - devreads3fileVermontKidsData01DED27C
          - RootResourceId
      PathPart: testdb
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/testdb/Resource
  devreads3fileVermontKidsDatatestdbGETApiPermissiondevreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABAGETtestdbE97BDD49:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TestDBFunction6436BF3A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: devreads3fileVermontKidsData01DED27C
            - /
            - Ref: devreads3fileVermontKidsDataDeploymentStageprod3644E4D3
            - /GET/testdb
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/testdb/GET/ApiPermission.devreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABA.GET..testdb
  devreads3fileVermontKidsDatatestdbGETApiPermissionTestdevreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABAGETtestdbC2433C0D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - TestDBFunction6436BF3A
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: devreads3fileVermontKidsData01DED27C
            - /test-invoke-stage/GET/testdb
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/testdb/GET/ApiPermission.Test.devreads3fileLocalDevBranchdevreads3fileVermontKidsDataD065EABA.GET..testdb
  devreads3fileVermontKidsDatatestdbGET4F976894:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: GET
      ResourceId:
        Ref: devreads3fileVermontKidsDatatestdbEE500CBC
      RestApiId:
        Ref: devreads3fileVermontKidsData01DED27C
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - TestDBFunction6436BF3A
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/dev--read-s3-file-Vermont Kids Data/Default/testdb/GET/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1WQy26DMBBFvyV7Mw1F6p6k6iptIyp1ixwzpQZjI8Y0Qoh/rx8hLat753U0uo+Q7mG/41dKRNUmSl5g/rBctMy1ypkymA+jaNGy45e+uSgHTrgwxbtLxWF20zMOnSSSRvvdl1EL6/2JTzh84rAONvW6tYJKbSpsCN6C3BmSdzAXRqEHBD0bJcXky+gWRlnJidAS5F6YMjXBydQFWtSBwntZc4tXPjkYks17GXh/NhfCjNqyZ+yVmTp357v/KhdNHZ6Ixp2acRDos7gXN2b0r2i/TeVb0S3LZuz8+2j70bLwtKdKXW9QR6MrGTPy4UBDDz/pE6QZpLuGpEwG97HsEIqovzFlpunSAQAA
    Metadata:
      aws:cdk:path: dev--read-s3-file-LocalDevBranch/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  Bucketname:
    Value:
      Ref: Uploadsbucket86F42938
  devreads3fileVermontKidsDataEndpointC023CA10:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: devreads3fileVermontKidsData01DED27C
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: devreads3fileVermontKidsDataDeploymentStageprod3644E4D3
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

