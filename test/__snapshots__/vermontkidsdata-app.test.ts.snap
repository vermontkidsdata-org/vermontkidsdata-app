// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Lambda Snapshot Test 1`] = `
Object {
  "Outputs": Object {
    "Bucketname": Object {
      "Value": Object {
        "Ref": "Uploadsbucket86F42938",
      },
    },
    "CloudFrontDNS": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "testcloudfrontB2C6E4FF",
          "DomainName",
        ],
      },
    },
    "CloudFrontbucket": Object {
      "Value": Object {
        "Ref": "tests3web0EC7B581",
      },
    },
    "testVermontKidsDataEndpoint84F49ECA": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "testVermontKidsDataCC7D0909",
            },
            ".execute-api.aq-south-1.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "BarChartAPIFunction8D100D69": Object {
      "DependsOn": Array [
        "BarChartAPIFunctionServiceRoleDefaultPolicyEED5A1D7",
        "BarChartAPIFunctionServiceRole24B14B18",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "REGION": "aq-south-1",
          },
        },
        "Handler": "index.bar",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "BarChartAPIFunctionServiceRole24B14B18",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BarChartAPIFunctionLogRetention13E30958": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "BarChartAPIFunction8D100D69",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "BarChartAPIFunctionServiceRole24B14B18": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BarChartAPIFunctionServiceRoleDefaultPolicyEED5A1D7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/prod/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BarChartAPIFunctionServiceRoleDefaultPolicyEED5A1D7",
        "Roles": Array [
          Object {
            "Ref": "BarChartAPIFunctionServiceRole24B14B18",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BasictableAPIFunction7BA08608": Object {
      "DependsOn": Array [
        "BasictableAPIFunctionServiceRoleDefaultPolicy2159AE4D",
        "BasictableAPIFunctionServiceRole1E828EAE",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "REGION": "aq-south-1",
          },
        },
        "Handler": "index.table",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "BasictableAPIFunctionServiceRole1E828EAE",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BasictableAPIFunctionLogRetentionAF75B5CC": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "BasictableAPIFunction7BA08608",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "BasictableAPIFunctionServiceRole1E828EAE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BasictableAPIFunctionServiceRoleDefaultPolicy2159AE4D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/prod/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BasictableAPIFunctionServiceRoleDefaultPolicy2159AE4D",
        "Roles": Array [
          Object {
            "Ref": "BasictableAPIFunctionServiceRole1E828EAE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": Object {
      "DependsOn": Array [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client(\\"s3\\")

CONFIGURATION_TYPES = [\\"TopicConfigurations\\", \\"QueueConfigurations\\", \\"LambdaFunctionConfigurations\\"]

def handler(event: dict, context):
    response_status = \\"SUCCESS\\"
    error_message = \\"\\"
    try:
        props = event[\\"ResourceProperties\\"]
        bucket = props[\\"BucketName\\"]
        notification_configuration = props[\\"NotificationConfiguration\\"]
        request_type = event[\\"RequestType\\"]
        managed = props.get('Managed', 'true').lower() == 'true'
        stack_id = event['StackId']

        if managed:
          config = handle_managed(request_type, notification_configuration)
        else:
          config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

        put_bucket_notification_configuration(bucket, config)
    except Exception as e:
        logging.exception(\\"Failed to put bucket notification configuration\\")
        response_status = \\"FAILED\\"
        error_message = f\\"Error: {str(e)}. \\"
    finally:
        submit_response(event, context, response_status, error_message)


def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration


def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):

  # find external notifications
  external_notifications = find_external_notifications(bucket, stack_id)

  # if delete, that's all we need
  if request_type == 'Delete':
    return external_notifications

  def with_id(notification):
    notification['Id'] = f\\"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}\\"
    return notification

  # otherwise, merge external with incoming config and augment with id
  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming
  return notifications


def find_external_notifications(bucket, stack_id):
  existing_notifications = get_bucket_notification_configuration(bucket)
  external_notifications = {}
  for t in CONFIGURATION_TYPES:
    # if the notification was created by us, we know what id to expect
    # so we can filter by it.
    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\\"{stack_id}-\\")]

  return external_notifications


def get_bucket_notification_configuration(bucket):
  return s3.get_bucket_notification_configuration(Bucket=bucket)


def put_bucket_notification_configuration(bucket, notification_configuration):
  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)


def submit_response(event: dict, context, response_status: str, error_message: str):
    response_body = json.dumps(
        {
            \\"Status\\": response_status,
            \\"Reason\\": f\\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\\",
            \\"PhysicalResourceId\\": event.get(\\"PhysicalResourceId\\") or event[\\"LogicalResourceId\\"],
            \\"StackId\\": event[\\"StackId\\"],
            \\"RequestId\\": event[\\"RequestId\\"],
            \\"LogicalResourceId\\": event[\\"LogicalResourceId\\"],
            \\"NoEcho\\": False,
        }
    ).encode(\\"utf-8\\")
    headers = {\\"content-type\\": \\"\\", \\"content-length\\": str(len(response_body))}
    try:
        req = urllib.request.Request(url=event[\\"ResponseURL\\"], headers=headers, data=response_body, method=\\"PUT\\")
        with urllib.request.urlopen(req) as response:
            print(response.read().decode(\\"utf-8\\"))
        print(\\"Status code: \\" + response.reason)
    except Exception as e:
        print(\\"send(..) failed executing request.urlopen(..): \\" + str(e))
",
        },
        "Description": "AWS CloudFormation handler for \\"Custom::S3BucketNotifications\\" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": Array [
          Object {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CensusTableByGeoFunction1EF3A681": Object {
      "DependsOn": Array [
        "CensusTableByGeoFunctionServiceRoleDefaultPolicy4D3B2C24",
        "CensusTableByGeoFunctionServiceRole88A5120C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.getCensusByGeo",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CensusTableByGeoFunctionServiceRole88A5120C",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CensusTableByGeoFunctionLogRetentionF7627A56": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "CensusTableByGeoFunction1EF3A681",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CensusTableByGeoFunctionServiceRole88A5120C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CensusTableByGeoFunctionServiceRoleDefaultPolicy4D3B2C24": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CensusTableByGeoFunctionServiceRoleDefaultPolicy4D3B2C24",
        "Roles": Array [
          Object {
            "Ref": "CensusTableByGeoFunctionServiceRole88A5120C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodesCensusVariablesByTableFunctionF5F759B7": Object {
      "DependsOn": Array [
        "CodesCensusVariablesByTableFunctionServiceRoleDefaultPolicy0469A8DF",
        "CodesCensusVariablesByTableFunctionServiceRoleCB05872E",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.codesCensusVariablesByTable",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CodesCensusVariablesByTableFunctionServiceRoleCB05872E",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CodesCensusVariablesByTableFunctionLogRetentionF9B82831": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "CodesCensusVariablesByTableFunctionF5F759B7",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CodesCensusVariablesByTableFunctionServiceRoleCB05872E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CodesCensusVariablesByTableFunctionServiceRoleDefaultPolicy0469A8DF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodesCensusVariablesByTableFunctionServiceRoleDefaultPolicy0469A8DF",
        "Roles": Array [
          Object {
            "Ref": "CodesCensusVariablesByTableFunctionServiceRoleCB05872E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": Object {
      "DependsOn": Array [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "tests3deployAwsCliLayer5D78A44A",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::[ASSET BUCKET]",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::[ASSET BUCKET]/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "tests3web0EC7B581",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "tests3web0EC7B581",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": Array [
          Object {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "Uploadsbucket86F42938",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetCensusTablesSearchFunctionE5D75F9E": Object {
      "DependsOn": Array [
        "GetCensusTablesSearchFunctionServiceRoleDefaultPolicy8391E9A3",
        "GetCensusTablesSearchFunctionServiceRole4A70EBA6",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.getCensusTablesSearch",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "GetCensusTablesSearchFunctionServiceRole4A70EBA6",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "GetCensusTablesSearchFunctionLogRetentionD10E2532": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "GetCensusTablesSearchFunctionE5D75F9E",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "GetCensusTablesSearchFunctionServiceRole4A70EBA6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetCensusTablesSearchFunctionServiceRoleDefaultPolicy8391E9A3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetCensusTablesSearchFunctionServiceRoleDefaultPolicy8391E9A3",
        "Roles": Array [
          Object {
            "Ref": "GetCensusTablesSearchFunctionServiceRole4A70EBA6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetGeosbyTypeFunctionE6591A7E": Object {
      "DependsOn": Array [
        "GetGeosbyTypeFunctionServiceRoleDefaultPolicy5EBEFE1F",
        "GetGeosbyTypeFunctionServiceRole8B587551",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.getGeosByType",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "GetGeosbyTypeFunctionServiceRole8B587551",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "GetGeosbyTypeFunctionLogRetention77AE2829": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "GetGeosbyTypeFunctionE6591A7E",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "GetGeosbyTypeFunctionServiceRole8B587551": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetGeosbyTypeFunctionServiceRoleDefaultPolicy5EBEFE1F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetGeosbyTypeFunctionServiceRoleDefaultPolicy5EBEFE1F",
        "Roles": Array [
          Object {
            "Ref": "GetGeosbyTypeFunctionServiceRole8B587551",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestDBFunction6436BF3A": Object {
      "DependsOn": Array [
        "TestDBFunctionServiceRoleDefaultPolicy573EA357",
        "TestDBFunctionServiceRole08619338",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.testcitylambda.queryDB",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "TestDBFunctionServiceRole08619338",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 15,
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestDBFunctionLogRetention612EEE2F": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "TestDBFunction6436BF3A",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "TestDBFunctionServiceRole08619338": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestDBFunctionServiceRoleDefaultPolicy573EA357": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestDBFunctionServiceRoleDefaultPolicy573EA357",
        "Roles": Array [
          Object {
            "Ref": "TestDBFunctionServiceRole08619338",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "UploadDataFunction2E82FB6B": Object {
      "DependsOn": Array [
        "UploadDataFunctionServiceRoleDefaultPolicy5821DD73",
        "UploadDataFunctionServiceRole0AA81148",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "REGION": "aq-south-1",
            "S3_BUCKET_NAME": Object {
              "Ref": "Uploadsbucket86F42938",
            },
            "STATUS_TABLE": Object {
              "Ref": "UploadstatustableA9E2FF87",
            },
          },
        },
        "Handler": "index.main",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "UploadDataFunctionServiceRole0AA81148",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "UploadDataFunctionInvokeServicePrincipals3amazonawscom154BF3FA": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "UploadDataFunction2E82FB6B",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "UploadDataFunctionLogRetentionC11AAF2E": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "UploadDataFunction2E82FB6B",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "UploadDataFunctionServiceRole0AA81148": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "UploadDataFunctionServiceRoleDefaultPolicy5821DD73": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "Uploadsbucket86F42938",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "Uploadsbucket86F42938",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "UploadstatustableA9E2FF87",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/prod/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "UploadDataFunctionServiceRoleDefaultPolicy5821DD73",
        "Roles": Array [
          Object {
            "Ref": "UploadDataFunctionServiceRole0AA81148",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "UploadStatusFunction296B6E97": Object {
      "DependsOn": Array [
        "UploadStatusFunctionServiceRoleDefaultPolicy37A1DC4B",
        "UploadStatusFunctionServiceRole9F253A43",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "REGION": "aq-south-1",
            "S3_BUCKET_NAME": Object {
              "Ref": "Uploadsbucket86F42938",
            },
            "STATUS_TABLE": Object {
              "Ref": "UploadstatustableA9E2FF87",
            },
          },
        },
        "Handler": "index.status",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "UploadStatusFunctionServiceRole9F253A43",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "UploadStatusFunctionLogRetentionB8036749": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "UploadStatusFunction296B6E97",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "UploadStatusFunctionServiceRole9F253A43": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "UploadStatusFunctionServiceRoleDefaultPolicy37A1DC4B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "UploadstatustableA9E2FF87",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "UploadStatusFunctionServiceRoleDefaultPolicy37A1DC4B",
        "Roles": Array [
          Object {
            "Ref": "UploadStatusFunctionServiceRole9F253A43",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Uploadsbucket86F42938": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "CorsConfiguration": Object {
          "CorsRules": Array [
            Object {
              "AllowedHeaders": Array [
                "*",
              ],
              "AllowedMethods": Array [
                "GET",
                "POST",
                "HEAD",
                "PUT",
              ],
              "AllowedOrigins": Array [
                "*",
              ],
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "UploadsbucketAllowBucketNotificationsTotestTestStackUploadDataFunctionC2D16AC2DFACE21F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "UploadDataFunction2E82FB6B",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": "999999999",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "Uploadsbucket86F42938",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "UploadsbucketAutoDeleteObjectsCustomResource66D0EADD": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "UploadsbucketPolicy1532F88C",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "Uploadsbucket86F42938",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "UploadsbucketNotifications8DBD3ABE": Object {
      "DependsOn": Array [
        "UploadsbucketAllowBucketNotificationsTotestTestStackUploadDataFunctionC2D16AC2DFACE21F",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "Uploadsbucket86F42938",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "LambdaFunctionConfigurations": Array [
            Object {
              "Events": Array [
                "s3:ObjectCreated:*",
              ],
              "Filter": Object {
                "Key": Object {
                  "FilterRules": Array [
                    Object {
                      "Name": "suffix",
                      "Value": "csv",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": Object {
                "Fn::GetAtt": Array [
                  "UploadDataFunction2E82FB6B",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "UploadsbucketPolicy1532F88C": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "Uploadsbucket86F42938",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "Uploadsbucket86F42938",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "Uploadsbucket86F42938",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "UploadstatustableA9E2FF87": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "id",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "testVermontKidsDataAccountD57F099F": Object {
      "DependsOn": Array [
        "testVermontKidsDataCC7D0909",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "testVermontKidsDataCloudWatchRole07FC9D1C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "testVermontKidsDataCC7D0909": Object {
      "Properties": Object {
        "Name": "test-Vermont Kids Data",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "testVermontKidsDataCloudWatchRole07FC9D1C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testVermontKidsDataDeployment82D2B8C7e3d77f67b43a4dd74ca3fd066550173a": Object {
      "DependsOn": Array [
        "testVermontKidsDatachartbarqueryIdGETD88F41A0",
        "testVermontKidsDatachartbarqueryId1B9FDE04",
        "testVermontKidsDatachartbar0896C591",
        "testVermontKidsDatachartOPTIONS88BF083C",
        "testVermontKidsDatachart586643EF",
        "testVermontKidsDatacodescensus2CD906C7",
        "testVermontKidsDatacodescensustables4DB02FB1",
        "testVermontKidsDatacodescensustablessearchGET469EB96E",
        "testVermontKidsDatacodescensustablessearchF7A0BEBD",
        "testVermontKidsDatacodescensusvariablestableGETA1F464BE",
        "testVermontKidsDatacodescensusvariablestable1D6C3BED",
        "testVermontKidsDatacodescensusvariables22373B03",
        "testVermontKidsDatacodesgeosgeoTypeGETE577E04D",
        "testVermontKidsDatacodesgeosgeoTypeCB9C8A50",
        "testVermontKidsDatacodesgeos7A77D4EF",
        "testVermontKidsDatacodesOPTIONS8255224F",
        "testVermontKidsDatacodes32B0A0D2",
        "testVermontKidsDatatablecensustablegeoTypeGETF5C9BB28",
        "testVermontKidsDatatablecensustablegeoTypeFFED038B",
        "testVermontKidsDatatablecensustableFECE0E80",
        "testVermontKidsDatatablecensusD8D4649B",
        "testVermontKidsDatatableOPTIONS2601EA66",
        "testVermontKidsDatatable08F0671A",
        "testVermontKidsDatatablequeryIdGETF20250C9",
        "testVermontKidsDatatablequeryId48027E8F",
        "testVermontKidsDatatable628FD5C7",
        "testVermontKidsDatatestdbGET1366231E",
        "testVermontKidsDatatestdb719EE2FE",
        "testVermontKidsDatauploaduploadIdGET9AFE8630",
        "testVermontKidsDatauploaduploadId7971A4C2",
        "testVermontKidsDatauploadOPTIONSB49CCAFD",
        "testVermontKidsDataupload9F7CBA80",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "testVermontKidsDataDeploymentStageprod8BC7562D": Object {
      "DependsOn": Array [
        "testVermontKidsDataAccountD57F099F",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "testVermontKidsDataDeployment82D2B8C7e3d77f67b43a4dd74ca3fd066550173a",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "testVermontKidsDatachart586643EF": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "chart",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatachartOPTIONS88BF083C": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "testVermontKidsDatachart586643EF",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatachartbar0896C591": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatachart586643EF",
        },
        "PathPart": "bar",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatachartbarqueryId1B9FDE04": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatachartbar0896C591",
        },
        "PathPart": "{queryId}",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatachartbarqueryIdGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETchartbarqueryId980EABB5": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "BarChartAPIFunction8D100D69",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/chart/bar/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatachartbarqueryIdGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETchartbarqueryIdA502C6E4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "BarChartAPIFunction8D100D69",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              Object {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/chart/bar/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatachartbarqueryIdGETD88F41A0": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "BarChartAPIFunction8D100D69",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testVermontKidsDatachartbarqueryId1B9FDE04",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatacodes32B0A0D2": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "codes",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodesOPTIONS8255224F": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "testVermontKidsDatacodes32B0A0D2",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatacodescensus2CD906C7": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatacodes32B0A0D2",
        },
        "PathPart": "census",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodescensustables4DB02FB1": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatacodescensus2CD906C7",
        },
        "PathPart": "tables",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodescensustablessearchF7A0BEBD": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatacodescensustables4DB02FB1",
        },
        "PathPart": "search",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodescensustablessearchGET469EB96E": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "GetCensusTablesSearchFunctionE5D75F9E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testVermontKidsDatacodescensustablessearchF7A0BEBD",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatacodescensustablessearchGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETcodescensustablessearch10D8B57A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "GetCensusTablesSearchFunctionE5D75F9E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/codes/census/tables/search",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacodescensustablessearchGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETcodescensustablessearchB69AC08C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "GetCensusTablesSearchFunctionE5D75F9E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              Object {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/codes/census/tables/search",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacodescensusvariables22373B03": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatacodescensus2CD906C7",
        },
        "PathPart": "variables",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodescensusvariablestable1D6C3BED": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatacodescensusvariables22373B03",
        },
        "PathPart": "{table}",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodescensusvariablestableGETA1F464BE": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "CodesCensusVariablesByTableFunctionF5F759B7",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testVermontKidsDatacodescensusvariablestable1D6C3BED",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatacodescensusvariablestableGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETcodescensusvariablestableBE347D24": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CodesCensusVariablesByTableFunctionF5F759B7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/codes/census/variables/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacodescensusvariablestableGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETcodescensusvariablestable76042167": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CodesCensusVariablesByTableFunctionF5F759B7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              Object {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/codes/census/variables/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacodesgeos7A77D4EF": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatacodes32B0A0D2",
        },
        "PathPart": "geos",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodesgeosgeoTypeCB9C8A50": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatacodesgeos7A77D4EF",
        },
        "PathPart": "{geoType}",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodesgeosgeoTypeGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETcodesgeosgeoType9C980682": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "GetGeosbyTypeFunctionE6591A7E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/codes/geos/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacodesgeosgeoTypeGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETcodesgeosgeoType9B8A42DB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "GetGeosbyTypeFunctionE6591A7E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              Object {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/codes/geos/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacodesgeosgeoTypeGETE577E04D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "GetGeosbyTypeFunctionE6591A7E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testVermontKidsDatacodesgeosgeoTypeCB9C8A50",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatatable08F0671A": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "table",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatable628FD5C7": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatatable08F0671A",
        },
        "PathPart": "table",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatableOPTIONS2601EA66": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "testVermontKidsDatatable08F0671A",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatatablecensusD8D4649B": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatatable08F0671A",
        },
        "PathPart": "census",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatablecensustableFECE0E80": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatatablecensusD8D4649B",
        },
        "PathPart": "{table}",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatablecensustablegeoTypeFFED038B": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatatablecensustableFECE0E80",
        },
        "PathPart": "{geoType}",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatablecensustablegeoTypeGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETtablecensustablegeoTypeD9A196E8": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CensusTableByGeoFunction1EF3A681",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/table/census/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatatablecensustablegeoTypeGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETtablecensustablegeoType65D309D9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "CensusTableByGeoFunction1EF3A681",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              Object {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/table/census/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatatablecensustablegeoTypeGETF5C9BB28": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "CensusTableByGeoFunction1EF3A681",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testVermontKidsDatatablecensustablegeoTypeFFED038B",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatatablequeryId48027E8F": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDatatable628FD5C7",
        },
        "PathPart": "{queryId}",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatablequeryIdGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETtabletablequeryIdC2CE2FF2": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "BasictableAPIFunction7BA08608",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/table/table/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatatablequeryIdGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETtabletablequeryId4B9B498A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "BasictableAPIFunction7BA08608",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              Object {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/table/table/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatatablequeryIdGETF20250C9": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "BasictableAPIFunction7BA08608",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testVermontKidsDatatablequeryId48027E8F",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatatestdb719EE2FE": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "testdb",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatestdbGET1366231E": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "TestDBFunction6436BF3A",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testVermontKidsDatatestdb719EE2FE",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatatestdbGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETtestdbDBDC845D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "TestDBFunction6436BF3A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/testdb",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatatestdbGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETtestdb90A8E403": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "TestDBFunction6436BF3A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              Object {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/testdb",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataupload9F7CBA80": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "upload",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatauploadOPTIONSB49CCAFD": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "testVermontKidsDataupload9F7CBA80",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatauploaduploadId7971A4C2": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testVermontKidsDataupload9F7CBA80",
        },
        "PathPart": "{uploadId}",
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatauploaduploadIdGET9AFE8630": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "UploadStatusFunction296B6E97",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "testVermontKidsDatauploaduploadId7971A4C2",
        },
        "RestApiId": Object {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatauploaduploadIdGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETuploaduploadId8E924CA1": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "UploadStatusFunction296B6E97",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/upload/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatauploaduploadIdGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETuploaduploadId7A7AB6E3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "UploadStatusFunction296B6E97",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              Object {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              Object {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/upload/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testcloudfrontB2C6E4FF": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Comment": "CloudFront distribution in test environment",
          "CustomErrorResponses": Array [
            Object {
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
            Object {
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
            ],
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "CachedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
            ],
            "Compress": true,
            "TargetOriginId": "testTestStacktestcloudfrontOrigin1029BB066",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Logging": Object {
            "Bucket": Object {
              "Fn::GetAtt": Array [
                "tests3logCE49E151",
                "RegionalDomainName",
              ],
            },
            "Prefix": "cloudfront-access-logs-test",
          },
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "tests3web0EC7B581",
                  "RegionalDomainName",
                ],
              },
              "Id": "testTestStacktestcloudfrontOrigin1029BB066",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "testcloudfrontOrigin1S3OriginDD20337C",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
          "Restrictions": Object {
            "GeoRestriction": Object {
              "Locations": Array [
                "US",
                "CA",
              ],
              "RestrictionType": "whitelist",
            },
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "testcloudfrontOrigin1S3OriginDD20337C": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Identity for testTestStacktestcloudfrontOrigin1029BB066",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "tests3deployAwsCliLayer5D78A44A": Object {
      "Properties": Object {
        "Content": Object {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "tests3deployCustomResource582B8BD9": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucketName": Object {
          "Ref": "tests3web0EC7B581",
        },
        "Prune": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": Array [
          "[ASSET BUCKET]",
        ],
        "SourceObjectKeys": Array [
          "[ASSET ZIP]",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "tests3logAutoDeleteObjectsCustomResourceFC11333F": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "tests3logPolicy3D41271D",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "tests3logCE49E151",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "tests3logCE49E151": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "tests3logPolicy3D41271D": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "tests3logCE49E151",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "tests3logCE49E151",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "tests3logCE49E151",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "tests3web0EC7B581": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "aws-cdk:cr-owned:636a96d2",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "tests3webAutoDeleteObjectsCustomResource41786D4D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "tests3webPolicy18946F01",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "tests3web0EC7B581",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "tests3webPolicy18946F01": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "tests3web0EC7B581",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "tests3web0EC7B581",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "tests3web0EC7B581",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "testcloudfrontOrigin1S3OriginDD20337C",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "tests3web0EC7B581",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
