// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Lambda Snapshot Test 1`] = `
{
  "Outputs": {
    "APIDomainName": {
      "Value": "api.test.vtkidsdata.org",
    },
    "Bucketname": {
      "Value": {
        "Ref": "Uploadsbucket86F42938",
      },
    },
    "docsdomain": {
      "Value": {
        "Fn::GetAtt": [
          "Distribution830FAC52",
          "DomainName",
        ],
      },
    },
    "testVermontKidsDataEndpoint84F49ECA": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "testVermontKidsDataCC7D0909",
            },
            ".execute-api.aq-south-1.",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "APIDocBucketRole36E5CFCE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "APIDocBucketRoleDefaultPolicyA92CF2A9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Docsbucket48971E37",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Docsbucket48971E37",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "APIDocBucketRoleDefaultPolicyA92CF2A9",
        "Roles": [
          {
            "Ref": "APIDocBucketRole36E5CFCE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthorizerfunctionB3710F81": {
      "DependsOn": [
        "AuthorizerfunctionServiceRoleDefaultPolicyD27ACA59",
        "AuthorizerfunctionServiceRole534990D5",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "ENV_NAME": "test",
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.main",
        "Role": {
          "Fn::GetAtt": [
            "AuthorizerfunctionServiceRole534990D5",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "AuthorizerfunctionLogRetention20E177D7": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AuthorizerfunctionB3710F81",
              },
            ],
          ],
        },
        "RetentionInDays": 5,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "AuthorizerfunctionServiceRole534990D5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthorizerfunctionServiceRoleDefaultPolicyD27ACA59": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SingleServiceTableABC698C2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SingleServiceTableABC698C2",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuthorizerfunctionServiceRoleDefaultPolicyD27ACA59",
        "Roles": [
          {
            "Ref": "AuthorizerfunctionServiceRole534990D5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthorizerfunctiontestTestStackrequestauthorizerCA2131E2Permissions9A7BCF02": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AuthorizerfunctionB3710F81",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/authorizers/",
              {
                "Ref": "requestauthorizerD239B518",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "BackupqueueE3E58E0E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "VisibilityTimeout": 900,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "BarChartAPIFunction8D100D69": {
      "DependsOn": [
        "BarChartAPIFunctionServiceRoleDefaultPolicyEED5A1D7",
        "BarChartAPIFunctionServiceRole24B14B18",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.bar",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "BarChartAPIFunctionServiceRole24B14B18",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "BarChartAPIFunctionLogRetention13E30958": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "BarChartAPIFunction8D100D69",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "BarChartAPIFunctionServiceRole24B14B18": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BarChartAPIFunctionServiceRoleDefaultPolicyEED5A1D7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/test/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BarChartAPIFunctionServiceRoleDefaultPolicyEED5A1D7",
        "Roles": [
          {
            "Ref": "BarChartAPIFunctionServiceRole24B14B18",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BasictableAPIFunction7BA08608": {
      "DependsOn": [
        "BasictableAPIFunctionServiceRoleDefaultPolicy2159AE4D",
        "BasictableAPIFunctionServiceRole1E828EAE",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.table",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "BasictableAPIFunctionServiceRole1E828EAE",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "BasictableAPIFunctionLogRetentionAF75B5CC": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "BasictableAPIFunction7BA08608",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "BasictableAPIFunctionServiceRole1E828EAE": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BasictableAPIFunctionServiceRoleDefaultPolicy2159AE4D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/test/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BasictableAPIFunctionServiceRoleDefaultPolicy2159AE4D",
        "Roles": [
          {
            "Ref": "BasictableAPIFunctionServiceRole1E828EAE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "DependsOn": [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": {
        "Code": {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client("s3")

EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'

CONFIGURATION_TYPES = ["TopicConfigurations", "QueueConfigurations", "LambdaFunctionConfigurations"]

def handler(event: dict, context):
  response_status = "SUCCESS"
  error_message = ""
  try:
    props = event["ResourceProperties"]
    bucket = props["BucketName"]
    notification_configuration = props["NotificationConfiguration"]
    request_type = event["RequestType"]
    managed = props.get('Managed', 'true').lower() == 'true'
    stack_id = event['StackId']

    if managed:
      config = handle_managed(request_type, notification_configuration)
    else:
      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

    put_bucket_notification_configuration(bucket, config)
  except Exception as e:
    logging.exception("Failed to put bucket notification configuration")
    response_status = "FAILED"
    error_message = f"Error: {str(e)}. "
  finally:
    submit_response(event, context, response_status, error_message)

def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration

def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):
  external_notifications = find_external_notifications(bucket, stack_id)

  if request_type == 'Delete':
    return external_notifications

  def with_id(notification):
    notification['Id'] = f"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}"
    return notification

  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming

  if EVENTBRIDGE_CONFIGURATION in notification_configuration:
    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
  elif EVENTBRIDGE_CONFIGURATION in external_notifications:
    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

  return notifications

def find_external_notifications(bucket, stack_id):
  existing_notifications = get_bucket_notification_configuration(bucket)
  external_notifications = {}
  for t in CONFIGURATION_TYPES:
    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f"{stack_id}-")]

  if EVENTBRIDGE_CONFIGURATION in existing_notifications:
    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

  return external_notifications

def get_bucket_notification_configuration(bucket):
  return s3.get_bucket_notification_configuration(Bucket=bucket)

def put_bucket_notification_configuration(bucket, notification_configuration):
  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)

def submit_response(event: dict, context, response_status: str, error_message: str):
  response_body = json.dumps(
    {
      "Status": response_status,
      "Reason": f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",
      "PhysicalResourceId": event.get("PhysicalResourceId") or event["LogicalResourceId"],
      "StackId": event["StackId"],
      "RequestId": event["RequestId"],
      "LogicalResourceId": event["LogicalResourceId"],
      "NoEcho": False,
    }
  ).encode("utf-8")
  headers = {"content-type": "", "content-length": str(len(response_body))}
  try:
    req = urllib.request.Request(url=event["ResponseURL"], headers=headers, data=response_body, method="PUT")
    with urllib.request.urlopen(req) as response:
      print(response.read().decode("utf-8"))
    print("Status code: " + response.reason)
  except Exception as e:
      print("send(..) failed executing request.urlopen(..): " + str(e))
",
        },
        "Description": "AWS CloudFormation handler for "Custom::S3BucketNotifications" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CensusTableByGeoFunction1EF3A681": {
      "DependsOn": [
        "CensusTableByGeoFunctionServiceRoleDefaultPolicy4D3B2C24",
        "CensusTableByGeoFunctionServiceRole88A5120C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.getCensusByGeo",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "CensusTableByGeoFunctionServiceRole88A5120C",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "CensusTableByGeoFunctionLogRetentionF7627A56": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CensusTableByGeoFunction1EF3A681",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CensusTableByGeoFunctionServiceRole88A5120C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CensusTableByGeoFunctionServiceRoleDefaultPolicy4D3B2C24": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CensusTableByGeoFunctionServiceRoleDefaultPolicy4D3B2C24",
        "Roles": [
          {
            "Ref": "CensusTableByGeoFunctionServiceRole88A5120C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CodesCensusVariablesByTableFunctionF5F759B7": {
      "DependsOn": [
        "CodesCensusVariablesByTableFunctionServiceRoleDefaultPolicy0469A8DF",
        "CodesCensusVariablesByTableFunctionServiceRoleCB05872E",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.codesCensusVariablesByTable",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "CodesCensusVariablesByTableFunctionServiceRoleCB05872E",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "CodesCensusVariablesByTableFunctionLogRetentionF9B82831": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CodesCensusVariablesByTableFunctionF5F759B7",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CodesCensusVariablesByTableFunctionServiceRoleCB05872E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CodesCensusVariablesByTableFunctionServiceRoleDefaultPolicy0469A8DF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CodesCensusVariablesByTableFunctionServiceRoleDefaultPolicy0469A8DF",
        "Roles": [
          {
            "Ref": "CodesCensusVariablesByTableFunctionServiceRoleCB05872E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CredentialsfunctionB73FF502": {
      "DependsOn": [
        "CredentialsfunctionServiceRoleDefaultPolicyB6C3CB25",
        "CredentialsfunctionServiceRole25557462",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "ENV_NAME": "test",
            "IDENTITY_POOL_ID": {
              "Ref": "identitypool",
            },
            "IDENTITY_PROVIDER": "cognito-idp.aq-south-1.amazonaws.com/us-east-1_wft0IBegY",
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.main",
        "Role": {
          "Fn::GetAtt": [
            "CredentialsfunctionServiceRole25557462",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "CredentialsfunctionLogRetention1EF7F215": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CredentialsfunctionB73FF502",
              },
            ],
          ],
        },
        "RetentionInDays": 5,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "CredentialsfunctionServiceRole25557462": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CredentialsfunctionServiceRoleDefaultPolicyB6C3CB25": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SingleServiceTableABC698C2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SingleServiceTableABC698C2",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CredentialsfunctionServiceRoleDefaultPolicyB6C3CB25",
        "Roles": [
          {
            "Ref": "CredentialsfunctionServiceRole25557462",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBB049752D": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRoleDefaultPolicy0801355D",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "DeployWebsiteAwsCliLayer17DBC421",
          },
        ],
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRoleDefaultPolicy0801355D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::[ASSET BUCKET]",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::[ASSET BUCKET]/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Docsbucket48971E37",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Docsbucket48971E37",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRoleDefaultPolicy0801355D",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBServiceRole739949D8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "Uploadsbucket86F42938",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DashboardcheckAPIFunction144C838C": {
      "DependsOn": [
        "DashboardcheckAPIFunctionServiceRoleDefaultPolicy373B2AB7",
        "DashboardcheckAPIFunctionServiceRoleFFA63C8F",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.check",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "DashboardcheckAPIFunctionServiceRoleFFA63C8F",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DashboardcheckAPIFunctionLogRetention7FDF459C": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "DashboardcheckAPIFunction144C838C",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DashboardcheckAPIFunctionServiceRoleDefaultPolicy373B2AB7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/test/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DashboardcheckAPIFunctionServiceRoleDefaultPolicy373B2AB7",
        "Roles": [
          {
            "Ref": "DashboardcheckAPIFunctionServiceRoleFFA63C8F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DashboardcheckAPIFunctionServiceRoleFFA63C8F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatasetBackupFunctionC91238D9": {
      "DependsOn": [
        "DatasetBackupFunctionServiceRoleDefaultPolicyD6EBE967",
        "DatasetBackupFunctionServiceRoleCB80604D",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "S3_BUCKET_NAME": {
              "Ref": "Uploadsbucket86F42938",
            },
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.main",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "DatasetBackupFunctionServiceRoleCB80604D",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DatasetBackupFunctionLogRetentionFC134E05": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "DatasetBackupFunctionC91238D9",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DatasetBackupFunctionServiceRoleCB80604D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatasetBackupFunctionServiceRoleDefaultPolicyD6EBE967": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BackupqueueE3E58E0E",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SingleServiceTableABC698C2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SingleServiceTableABC698C2",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Uploadsbucket86F42938",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Uploadsbucket86F42938",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DatasetBackupFunctionServiceRoleDefaultPolicyD6EBE967",
        "Roles": [
          {
            "Ref": "DatasetBackupFunctionServiceRoleCB80604D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DatasetBackupFunctionSqsEventSourcetestTestStackBackupqueueF7E46FBD79E39644": {
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "BackupqueueE3E58E0E",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "DatasetBackupFunctionC91238D9",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "DatasetRevertFunction219B9FBB": {
      "DependsOn": [
        "DatasetRevertFunctionServiceRoleDefaultPolicyCC687689",
        "DatasetRevertFunctionServiceRoleD489927F",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "S3_BUCKET_NAME": {
              "Ref": "Uploadsbucket86F42938",
            },
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.main",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "DatasetRevertFunctionServiceRoleD489927F",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DatasetRevertFunctionLogRetentionDFCA3F6E": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "DatasetRevertFunction219B9FBB",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DatasetRevertFunctionServiceRoleD489927F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatasetRevertFunctionServiceRoleDefaultPolicyCC687689": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SingleServiceTableABC698C2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SingleServiceTableABC698C2",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Uploadsbucket86F42938",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Uploadsbucket86F42938",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DatasetRevertFunctionServiceRoleDefaultPolicyCC687689",
        "Roles": [
          {
            "Ref": "DatasetRevertFunctionServiceRoleD489927F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DatasetpostAPIFunctionB555A2CF": {
      "DependsOn": [
        "DatasetpostAPIFunctionServiceRoleDefaultPolicy619AFDF1",
        "DatasetpostAPIFunctionServiceRole63551C9C",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "S3_BUCKET_NAME": {
              "Ref": "Uploadsbucket86F42938",
            },
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.handlerPost",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "DatasetpostAPIFunctionServiceRole63551C9C",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DatasetpostAPIFunctionLogRetentionB9878A39": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "DatasetpostAPIFunctionB555A2CF",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DatasetpostAPIFunctionServiceRole63551C9C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatasetpostAPIFunctionServiceRoleDefaultPolicy619AFDF1": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/test/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DatasetpostAPIFunctionServiceRoleDefaultPolicy619AFDF1",
        "Roles": [
          {
            "Ref": "DatasetpostAPIFunctionServiceRole63551C9C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeleteSessionfunction5693F658": {
      "DependsOn": [
        "DeleteSessionfunctionServiceRoleDefaultPolicyB81E22BA",
        "DeleteSessionfunctionServiceRole4F5FC89D",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REDIRECT_URI": "https://ui.test.vtkidsdata.org/admin",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.main",
        "Role": {
          "Fn::GetAtt": [
            "DeleteSessionfunctionServiceRole4F5FC89D",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeleteSessionfunctionLogRetention2F44D317": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "DeleteSessionfunction5693F658",
              },
            ],
          ],
        },
        "RetentionInDays": 5,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DeleteSessionfunctionServiceRole4F5FC89D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeleteSessionfunctionServiceRoleDefaultPolicyB81E22BA": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SingleServiceTableABC698C2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SingleServiceTableABC698C2",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeleteSessionfunctionServiceRoleDefaultPolicyB81E22BA",
        "Roles": [
          {
            "Ref": "DeleteSessionfunctionServiceRole4F5FC89D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeployWebsiteAwsCliLayer17DBC421": {
      "Properties": {
        "Content": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "DeployWebsiteCustomResource1024MiBE7965B54": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketName": {
          "Ref": "Docsbucket48971E37",
        },
        "Prune": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C1024MiBB049752D",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
          "[ASSET BUCKET]",
        ],
        "SourceMarkers": [
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
        ],
        "SourceObjectKeys": [
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
          "[ASSET ZIP]",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "Distribution830FAC52": {
      "Properties": {
        "DistributionConfig": {
          "DefaultCacheBehavior": {
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "TargetOriginId": "testTestStackDistributionOrigin12BE499BC",
            "ViewerProtocolPolicy": "allow-all",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "Docsbucket48971E37",
                  "RegionalDomainName",
                ],
              },
              "Id": "testTestStackDistributionOrigin12BE499BC",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "OriginAccessIdentityDF1E3CAC",
                      },
                    ],
                  ],
                },
              },
            },
          ],
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "Docsbucket48971E37": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "Tags": [
          {
            "Key": "aws-cdk:cr-owned:fcca2278",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DocsbucketPolicy7757B0E4": {
      "Properties": {
        "Bucket": {
          "Ref": "Docsbucket48971E37",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "OriginAccessIdentityDF1E3CAC",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "Docsbucket48971E37",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DownloadFunction40EABBE7": {
      "DependsOn": [
        "DownloadFunctionServiceRoleDefaultPolicyC3243614",
        "DownloadFunctionServiceRoleFC9C1AC1",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.main",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "DownloadFunctionServiceRoleFC9C1AC1",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DownloadFunctionLogRetention4827BF26": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "DownloadFunction40EABBE7",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DownloadFunctionServiceRoleDefaultPolicyC3243614": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DownloadFunctionServiceRoleDefaultPolicyC3243614",
        "Roles": [
          {
            "Ref": "DownloadFunctionServiceRoleFC9C1AC1",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DownloadFunctionServiceRoleFC9C1AC1": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetCensusTablesSearchFunctionE5D75F9E": {
      "DependsOn": [
        "GetCensusTablesSearchFunctionServiceRoleDefaultPolicy8391E9A3",
        "GetCensusTablesSearchFunctionServiceRole4A70EBA6",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.getCensusTablesSearch",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "GetCensusTablesSearchFunctionServiceRole4A70EBA6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "GetCensusTablesSearchFunctionLogRetentionD10E2532": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "GetCensusTablesSearchFunctionE5D75F9E",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "GetCensusTablesSearchFunctionServiceRole4A70EBA6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetCensusTablesSearchFunctionServiceRoleDefaultPolicy8391E9A3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetCensusTablesSearchFunctionServiceRoleDefaultPolicy8391E9A3",
        "Roles": [
          {
            "Ref": "GetCensusTablesSearchFunctionServiceRole4A70EBA6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDatasetBackupFunction960C1285": {
      "DependsOn": [
        "GetDatasetBackupFunctionServiceRoleDefaultPolicy0600C4B9",
        "GetDatasetBackupFunctionServiceRole2C334398",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "S3_BUCKET_NAME": {
              "Ref": "Uploadsbucket86F42938",
            },
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.main",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "GetDatasetBackupFunctionServiceRole2C334398",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "GetDatasetBackupFunctionLogRetentionBCCDE9D4": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "GetDatasetBackupFunction960C1285",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "GetDatasetBackupFunctionServiceRole2C334398": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetDatasetBackupFunctionServiceRoleDefaultPolicy0600C4B9": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SingleServiceTableABC698C2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SingleServiceTableABC698C2",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Uploadsbucket86F42938",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Uploadsbucket86F42938",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDatasetBackupFunctionServiceRoleDefaultPolicy0600C4B9",
        "Roles": [
          {
            "Ref": "GetDatasetBackupFunctionServiceRole2C334398",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetGeosbyTypeFunctionE6591A7E": {
      "DependsOn": [
        "GetGeosbyTypeFunctionServiceRoleDefaultPolicy5EBEFE1F",
        "GetGeosbyTypeFunctionServiceRole8B587551",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.getGeosByType",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "GetGeosbyTypeFunctionServiceRole8B587551",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "GetGeosbyTypeFunctionLogRetention77AE2829": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "GetGeosbyTypeFunctionE6591A7E",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "GetGeosbyTypeFunctionServiceRole8B587551": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetGeosbyTypeFunctionServiceRoleDefaultPolicy5EBEFE1F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetGeosbyTypeFunctionServiceRoleDefaultPolicy5EBEFE1F",
        "Roles": [
          {
            "Ref": "GetGeosbyTypeFunctionServiceRole8B587551",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetSessionfunction0C2A1268": {
      "DependsOn": [
        "GetSessionfunctionServiceRoleDefaultPolicyCE75DA55",
        "GetSessionfunctionServiceRole2D324BDD",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.main",
        "Role": {
          "Fn::GetAtt": [
            "GetSessionfunctionServiceRole2D324BDD",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "GetSessionfunctionLogRetentionB01F32FD": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "GetSessionfunction0C2A1268",
              },
            ],
          ],
        },
        "RetentionInDays": 5,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "GetSessionfunctionServiceRole2D324BDD": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetSessionfunctionServiceRoleDefaultPolicyCE75DA55": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SingleServiceTableABC698C2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SingleServiceTableABC698C2",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetSessionfunctionServiceRoleDefaultPolicyCE75DA55",
        "Roles": [
          {
            "Ref": "GetSessionfunctionServiceRole2D324BDD",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetYearsFunction1A78275F": {
      "DependsOn": [
        "GetYearsFunctionServiceRoleDefaultPolicy07A2BE54",
        "GetYearsFunctionServiceRoleCF1DCE76",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.getDataSetYearsByDataset",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "GetYearsFunctionServiceRoleCF1DCE76",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "GetYearsFunctionLogRetention7A139EAE": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "GetYearsFunction1A78275F",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "GetYearsFunctionServiceRoleCF1DCE76": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "GetYearsFunctionServiceRoleDefaultPolicy07A2BE54": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetYearsFunctionServiceRoleDefaultPolicy07A2BE54",
        "Roles": [
          {
            "Ref": "GetYearsFunctionServiceRoleCF1DCE76",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ListDatasetBackupsFunction0650E3F1": {
      "DependsOn": [
        "ListDatasetBackupsFunctionServiceRoleDefaultPolicy44503DDD",
        "ListDatasetBackupsFunctionServiceRoleD0AB32C5",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.main",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "ListDatasetBackupsFunctionServiceRoleD0AB32C5",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ListDatasetBackupsFunctionLogRetentionD7E9CA82": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "ListDatasetBackupsFunction0650E3F1",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ListDatasetBackupsFunctionServiceRoleD0AB32C5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ListDatasetBackupsFunctionServiceRoleDefaultPolicy44503DDD": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SingleServiceTableABC698C2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SingleServiceTableABC698C2",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ListDatasetBackupsFunctionServiceRoleDefaultPolicy44503DDD",
        "Roles": [
          {
            "Ref": "ListDatasetBackupsFunctionServiceRoleD0AB32C5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OAuthcallbackfunctionBEA96A5A": {
      "DependsOn": [
        "OAuthcallbackfunctionServiceRoleDefaultPolicy3D93E713",
        "OAuthcallbackfunctionServiceRole32182B80",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "COGNITO_CLIENT_ID": "bogus-client",
            "COGNITO_SECRET": "bogus-secret",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "ENV_NAME": "test",
            "IS_PRODUCTION": "false",
            "MY_DOMAIN": "test.vtkidsdata.org",
            "MY_URI": "https://api.test.vtkidsdata.org/oauthcallback",
            "NAMESPACE": "test",
            "REDIRECT_URI": "https://ui.test.vtkidsdata.org/admin",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.main",
        "Role": {
          "Fn::GetAtt": [
            "OAuthcallbackfunctionServiceRole32182B80",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "OAuthcallbackfunctionLogRetention37692189": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "OAuthcallbackfunctionBEA96A5A",
              },
            ],
          ],
        },
        "RetentionInDays": 5,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "OAuthcallbackfunctionServiceRole32182B80": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "OAuthcallbackfunctionServiceRoleDefaultPolicy3D93E713": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SingleServiceTableABC698C2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SingleServiceTableABC698C2",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "OAuthcallbackfunctionServiceRoleDefaultPolicy3D93E713",
        "Roles": [
          {
            "Ref": "OAuthcallbackfunctionServiceRole32182B80",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "OriginAccessIdentityDF1E3CAC": {
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "Allows CloudFront to reach the bucket",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "QueriesdeleteAPIFunction2A72083B": {
      "DependsOn": [
        "QueriesdeleteAPIFunctionServiceRoleDefaultPolicyBDF0C00C",
        "QueriesdeleteAPIFunctionServiceRole8AD179AA",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.handlerDelete",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "QueriesdeleteAPIFunctionServiceRole8AD179AA",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "QueriesdeleteAPIFunctionLogRetention4215F164": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "QueriesdeleteAPIFunction2A72083B",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "QueriesdeleteAPIFunctionServiceRole8AD179AA": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "QueriesdeleteAPIFunctionServiceRoleDefaultPolicyBDF0C00C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/test/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "QueriesdeleteAPIFunctionServiceRoleDefaultPolicyBDF0C00C",
        "Roles": [
          {
            "Ref": "QueriesdeleteAPIFunctionServiceRole8AD179AA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "QueriesgetAPIFunction12B2D06C": {
      "DependsOn": [
        "QueriesgetAPIFunctionServiceRoleDefaultPolicyEEC559EE",
        "QueriesgetAPIFunctionServiceRole4BADECC8",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.handlerGet",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "QueriesgetAPIFunctionServiceRole4BADECC8",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "QueriesgetAPIFunctionLogRetention83CB846A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "QueriesgetAPIFunction12B2D06C",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "QueriesgetAPIFunctionServiceRole4BADECC8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "QueriesgetAPIFunctionServiceRoleDefaultPolicyEEC559EE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/test/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "QueriesgetAPIFunctionServiceRoleDefaultPolicyEEC559EE",
        "Roles": [
          {
            "Ref": "QueriesgetAPIFunctionServiceRole4BADECC8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "QueriesgetListAPIFunctionFF4BF43F": {
      "DependsOn": [
        "QueriesgetListAPIFunctionServiceRoleDefaultPolicyACA47E5A",
        "QueriesgetListAPIFunctionServiceRole8D01FE5E",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.handlerGetList",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "QueriesgetListAPIFunctionServiceRole8D01FE5E",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "QueriesgetListAPIFunctionLogRetention11AB6E4A": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "QueriesgetListAPIFunctionFF4BF43F",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "QueriesgetListAPIFunctionServiceRole8D01FE5E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "QueriesgetListAPIFunctionServiceRoleDefaultPolicyACA47E5A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/test/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "QueriesgetListAPIFunctionServiceRoleDefaultPolicyACA47E5A",
        "Roles": [
          {
            "Ref": "QueriesgetListAPIFunctionServiceRole8D01FE5E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "QueriespostAPIFunction47276EF8": {
      "DependsOn": [
        "QueriespostAPIFunctionServiceRoleDefaultPolicy31788D64",
        "QueriespostAPIFunctionServiceRoleB24748C8",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.handlerPost",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "QueriespostAPIFunctionServiceRoleB24748C8",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "QueriespostAPIFunctionLogRetention08ED1ECB": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "QueriespostAPIFunction47276EF8",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "QueriespostAPIFunctionServiceRoleB24748C8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "QueriespostAPIFunctionServiceRoleDefaultPolicy31788D64": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/test/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "QueriespostAPIFunctionServiceRoleDefaultPolicy31788D64",
        "Roles": [
          {
            "Ref": "QueriespostAPIFunctionServiceRoleB24748C8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "QueriesputAPIFunction37E4BF37": {
      "DependsOn": [
        "QueriesputAPIFunctionServiceRoleDefaultPolicyFC98A98A",
        "QueriesputAPIFunctionServiceRole00346DE8",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.handlerPut",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "QueriesputAPIFunctionServiceRole00346DE8",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "QueriesputAPIFunctionLogRetention70A06BBE": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "QueriesputAPIFunction37E4BF37",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "QueriesputAPIFunctionServiceRole00346DE8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "QueriesputAPIFunctionServiceRoleDefaultPolicyFC98A98A": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/test/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "QueriesputAPIFunctionServiceRoleDefaultPolicyFC98A98A",
        "Roles": [
          {
            "Ref": "QueriesputAPIFunctionServiceRole00346DE8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SingleServiceTableABC698C2": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "PK",
            "AttributeType": "S",
          },
          {
            "AttributeName": "SK",
            "AttributeType": "S",
          },
          {
            "AttributeName": "GSI1PK",
            "AttributeType": "S",
          },
          {
            "AttributeName": "GSI1SK",
            "AttributeType": "S",
          },
          {
            "AttributeName": "GSI2PK",
            "AttributeType": "S",
          },
          {
            "AttributeName": "GSI2SK",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "GSI1",
            "KeySchema": [
              {
                "AttributeName": "GSI1PK",
                "KeyType": "HASH",
              },
              {
                "AttributeName": "GSI1SK",
                "KeyType": "RANGE",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
          {
            "IndexName": "GSI2",
            "KeySchema": [
              {
                "AttributeName": "GSI2PK",
                "KeyType": "HASH",
              },
              {
                "AttributeName": "GSI2SK",
                "KeyType": "RANGE",
              },
            ],
            "Projection": {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "PK",
            "KeyType": "HASH",
          },
          {
            "AttributeName": "SK",
            "KeyType": "RANGE",
          },
        ],
        "TimeToLiveSpecification": {
          "AttributeName": "TTL",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "TestDBFunction6436BF3A": {
      "DependsOn": [
        "TestDBFunctionServiceRoleDefaultPolicy573EA357",
        "TestDBFunctionServiceRole08619338",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "testcitylambda.queryDB",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "TestDBFunctionServiceRole08619338",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 15,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestDBFunctionLogRetention612EEE2F": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "TestDBFunction6436BF3A",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "TestDBFunctionServiceRole08619338": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestDBFunctionServiceRoleDefaultPolicy573EA357": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestDBFunctionServiceRoleDefaultPolicy573EA357",
        "Roles": [
          {
            "Ref": "TestDBFunctionServiceRole08619338",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "UploadDataFunction2E82FB6B": {
      "DependsOn": [
        "UploadDataFunctionServiceRoleDefaultPolicy5821DD73",
        "UploadDataFunctionServiceRole0AA81148",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "S3_BUCKET_NAME": {
              "Ref": "Uploadsbucket86F42938",
            },
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.main",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "UploadDataFunctionServiceRole0AA81148",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "UploadDataFunctionInvoke7Tjz5KX7GRQDyjRPBytArERKUwy73V0WhTiHDj2lAwA6E00DED": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UploadDataFunction2E82FB6B",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "UploadDataFunctionLogRetentionC11AAF2E": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "UploadDataFunction2E82FB6B",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "UploadDataFunctionServiceRole0AA81148": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "UploadDataFunctionServiceRoleDefaultPolicy5821DD73": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Uploadsbucket86F42938",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Uploadsbucket86F42938",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BackupqueueE3E58E0E",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SingleServiceTableABC698C2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SingleServiceTableABC698C2",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:aq-south-1:999999999:secret:vkd/test/dbcreds-??????",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "UploadDataFunctionServiceRoleDefaultPolicy5821DD73",
        "Roles": [
          {
            "Ref": "UploadDataFunctionServiceRole0AA81148",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "UploadStatusFunction296B6E97": {
      "DependsOn": [
        "UploadStatusFunctionServiceRoleDefaultPolicy37A1DC4B",
        "UploadStatusFunctionServiceRole9F253A43",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASET_BACKUP_QUEUE_URL": {
              "Ref": "BackupqueueE3E58E0E",
            },
            "IS_PRODUCTION": "false",
            "NAMESPACE": "test",
            "REGION": "aq-south-1",
            "S3_BUCKET_NAME": {
              "Ref": "Uploadsbucket86F42938",
            },
            "SERVICE_TABLE": {
              "Ref": "SingleServiceTableABC698C2",
            },
          },
        },
        "Handler": "index.status",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "UploadStatusFunctionServiceRole9F253A43",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 5,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "UploadStatusFunctionLogRetentionB8036749": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "UploadStatusFunction296B6E97",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "UploadStatusFunctionServiceRole9F253A43": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "UploadStatusFunctionServiceRoleDefaultPolicy37A1DC4B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SingleServiceTableABC698C2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SingleServiceTableABC698C2",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "UploadStatusFunctionServiceRoleDefaultPolicy37A1DC4B",
        "Roles": [
          {
            "Ref": "UploadStatusFunctionServiceRole9F253A43",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Uploadsbucket86F42938": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketName": "ctechnica-vkd-test",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*",
              ],
              "AllowedMethods": [
                "GET",
                "POST",
                "HEAD",
                "PUT",
              ],
              "AllowedOrigins": [
                "*",
              ],
            },
          ],
        },
        "OwnershipControls": {
          "Rules": [
            {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "UploadsbucketAllowBucketNotificationsTotestTestStackUploadDataFunctionC2D16AC2DFACE21F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UploadDataFunction2E82FB6B",
            "Arn",
          ],
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": "999999999",
        "SourceArn": {
          "Fn::GetAtt": [
            "Uploadsbucket86F42938",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "UploadsbucketAutoDeleteObjectsCustomResource66D0EADD": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "UploadsbucketPolicy1532F88C",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "Uploadsbucket86F42938",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "UploadsbucketNotifications8DBD3ABE": {
      "DependsOn": [
        "UploadsbucketAllowBucketNotificationsTotestTestStackUploadDataFunctionC2D16AC2DFACE21F",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "Uploadsbucket86F42938",
        },
        "Managed": true,
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*",
              ],
              "Filter": {
                "Key": {
                  "FilterRules": [
                    {
                      "Name": "suffix",
                      "Value": "csv",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "UploadDataFunction2E82FB6B",
                  "Arn",
                ],
              },
            },
            {
              "Events": [
                "s3:ObjectTagging:Put",
              ],
              "Filter": {
                "Key": {
                  "FilterRules": [
                    {
                      "Name": "suffix",
                      "Value": "csv",
                    },
                  ],
                },
              },
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "UploadDataFunction2E82FB6B",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "UploadsbucketPolicy1532F88C": {
      "Properties": {
        "Bucket": {
          "Ref": "Uploadsbucket86F42938",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Uploadsbucket86F42938",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Uploadsbucket86F42938",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "OriginAccessIdentityDF1E3CAC",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "Uploadsbucket86F42938",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "Uploadsbucket86F42938",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "becertCertificateRequestorFunction3ACDE82F": {
      "DependsOn": [
        "becertCertificateRequestorFunctionServiceRoleDefaultPolicyB4472907",
        "becertCertificateRequestorFunctionServiceRole225F6B91",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "[ASSET BUCKET]",
          "S3Key": "[ASSET ZIP]",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": {
          "Fn::GetAtt": [
            "becertCertificateRequestorFunctionServiceRole225F6B91",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "becertCertificateRequestorFunctionServiceRole225F6B91": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "becertCertificateRequestorFunctionServiceRoleDefaultPolicyB4472907": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "route53:changeResourceRecordSets",
              "Condition": {
                "ForAllValues:StringEquals": {
                  "route53:ChangeResourceRecordSetsActions": [
                    "UPSERT",
                  ],
                  "route53:ChangeResourceRecordSetsRecordTypes": [
                    "CNAME",
                  ],
                },
                "ForAllValues:StringLike": {
                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": [
                    "*.api.test.vtkidsdata.org",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/Z01884571R5A9N33JR5NE",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "becertCertificateRequestorFunctionServiceRoleDefaultPolicyB4472907",
        "Roles": [
          {
            "Ref": "becertCertificateRequestorFunctionServiceRole225F6B91",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "becertCertificateRequestorResourceB2D9A26A": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DomainName": "api.test.vtkidsdata.org",
        "HostedZoneId": "Z01884571R5A9N33JR5NE",
        "Region": "us-east-1",
        "ServiceToken": {
          "Fn::GetAtt": [
            "becertCertificateRequestorFunction3ACDE82F",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "gatewayresponseforACCESSDENIEDCCB1887E": {
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.Access-Control-Allow-Credentials": "'true'",
          "gatewayresponse.header.Access-Control-Allow-Methods": "'*'",
          "gatewayresponse.header.Access-Control-Allow-Origin": "method.request.header.origin",
        },
        "ResponseType": "ACCESS_DENIED",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::GatewayResponse",
    },
    "gatewayresponseforDEFAULT4XXE9C3E6DB": {
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.Access-Control-Allow-Credentials": "'true'",
          "gatewayresponse.header.Access-Control-Allow-Methods": "'*'",
          "gatewayresponse.header.Access-Control-Allow-Origin": "method.request.header.origin",
        },
        "ResponseType": "DEFAULT_4XX",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::GatewayResponse",
    },
    "gatewayresponseforDEFAULT5XX187AAE21": {
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.Access-Control-Allow-Credentials": "'true'",
          "gatewayresponse.header.Access-Control-Allow-Methods": "'*'",
          "gatewayresponse.header.Access-Control-Allow-Origin": "method.request.header.origin",
        },
        "ResponseType": "DEFAULT_5XX",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::GatewayResponse",
    },
    "identitypool": {
      "Properties": {
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": [
          {
            "ClientId": "60c446jr2ogigpg0nb5l593l93",
            "ProviderName": "cognito-idp.aq-south-1.amazonaws.com/us-east-1_wft0IBegY",
          },
        ],
        "IdentityPoolName": "VKD-test-pool",
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "identitypoolroleattachment": {
      "Properties": {
        "IdentityPoolId": {
          "Ref": "identitypool",
        },
        "RoleMappings": {
          "mapping": {
            "AmbiguousRoleResolution": "AuthenticatedRole",
            "IdentityProvider": "cognito-idp.aq-south-1.amazonaws.com/us-east-1_wft0IBegY:60c446jr2ogigpg0nb5l593l93",
            "Type": "Token",
          },
        },
        "Roles": {
          "authenticated": {
            "Fn::GetAtt": [
              "usersgrouprole5142F148",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "r53bearec354FD1A0": {
      "Properties": {
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "testVermontKidsDataCustomDomain046241D5",
              "RegionalDomainName",
            ],
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "testVermontKidsDataCustomDomain046241D5",
              "RegionalHostedZoneId",
            ],
          },
        },
        "HostedZoneId": "Z01884571R5A9N33JR5NE",
        "Name": "api.test.vtkidsdata.org.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "requestauthorizerD239B518": {
      "Properties": {
        "AuthorizerResultTtlInSeconds": 0,
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "AuthorizerfunctionB3710F81",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":apigateway:",
              {
                "Fn::Select": [
                  3,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::GetAtt": [
                          "AuthorizerfunctionB3710F81",
                          "Arn",
                        ],
                      },
                    ],
                  },
                ],
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "AuthorizerfunctionB3710F81",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "IdentitySource": "method.request.header.Cookie",
        "Name": "testTestStackrequestauthorizerCA2131E2",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
        "Type": "REQUEST",
      },
      "Type": "AWS::ApiGateway::Authorizer",
    },
    "testVermontKidsDataAccountD57F099F": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "testVermontKidsDataCC7D0909",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "testVermontKidsDataCloudWatchRole07FC9D1C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "testVermontKidsDataCC7D0909": {
      "Properties": {
        "Name": "test-Vermont Kids Data",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "testVermontKidsDataCloudWatchRole07FC9D1C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "testVermontKidsDataCustomDomain046241D5": {
      "Properties": {
        "DomainName": "api.test.vtkidsdata.org",
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL",
          ],
        },
        "RegionalCertificateArn": {
          "Fn::GetAtt": [
            "becertCertificateRequestorResourceB2D9A26A",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::DomainName",
    },
    "testVermontKidsDataCustomDomainMaptestTestStacktestVermontKidsData62A09AC6A13FFC9D": {
      "Properties": {
        "DomainName": {
          "Ref": "testVermontKidsDataCustomDomain046241D5",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
        "Stage": {
          "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
        },
      },
      "Type": "AWS::ApiGateway::BasePathMapping",
    },
    "testVermontKidsDataDeployment82D2B8C77ba80a8dec59e018caf496a76cdb3006": {
      "DependsOn": [
        "gatewayresponseforACCESSDENIEDCCB1887E",
        "gatewayresponseforDEFAULT4XXE9C3E6DB",
        "gatewayresponseforDEFAULT5XX187AAE21",
        "testVermontKidsDataapidocsyamlGET2432E319",
        "testVermontKidsDataapidocsyamlD0CA29BA",
        "testVermontKidsDatachartbarqueryIdGETD88F41A0",
        "testVermontKidsDatachartbarqueryId1B9FDE04",
        "testVermontKidsDatachartbar0896C591",
        "testVermontKidsDatachartOPTIONS88BF083C",
        "testVermontKidsDatachart586643EF",
        "testVermontKidsDatacodescensus2CD906C7",
        "testVermontKidsDatacodescensustables4DB02FB1",
        "testVermontKidsDatacodescensustablessearchGET469EB96E",
        "testVermontKidsDatacodescensustablessearchF7A0BEBD",
        "testVermontKidsDatacodescensusvariablestableGETA1F464BE",
        "testVermontKidsDatacodescensusvariablestable1D6C3BED",
        "testVermontKidsDatacodescensusvariables22373B03",
        "testVermontKidsDatacodesgeosgeoTypeGETE577E04D",
        "testVermontKidsDatacodesgeosgeoTypeCB9C8A50",
        "testVermontKidsDatacodesgeos7A77D4EF",
        "testVermontKidsDatacodesOPTIONS8255224F",
        "testVermontKidsDatacodes32B0A0D2",
        "testVermontKidsDatacredentialsGET881864AE",
        "testVermontKidsDatacredentialsOPTIONSFEB59669",
        "testVermontKidsDatacredentialsF328366F",
        "testVermontKidsDatadashboardcheckGET171EB08D",
        "testVermontKidsDatadashboardcheck87818EFA",
        "testVermontKidsDatadashboardOPTIONS299AC35B",
        "testVermontKidsDatadashboardA8315A8C",
        "testVermontKidsDatadatasetdatasetPOSTD4665036",
        "testVermontKidsDatadatasetdatasetC15A3388",
        "testVermontKidsDatadatasetbackupsdatasetversionGET918F2D32",
        "testVermontKidsDatadatasetbackupsdatasetversionA7A5FA0E",
        "testVermontKidsDatadatasetbackupsdatasetversionrevertPOSTDF5ECC4B",
        "testVermontKidsDatadatasetbackupsdatasetversionrevert6D14AFD2",
        "testVermontKidsDatadatasetbackupsdatasetGET17AAE0B4",
        "testVermontKidsDatadatasetbackupsdataset2CB8887C",
        "testVermontKidsDatadatasetbackups61E152F2",
        "testVermontKidsDatadatasetOPTIONSCBDAE62E",
        "testVermontKidsDatadatasetD39C03ED",
        "testVermontKidsDatadatasetyearsdatasetGETABE2E121",
        "testVermontKidsDatadatasetyearsdataset9B3C2388",
        "testVermontKidsDatadatasetyears672FB4DC",
        "testVermontKidsDatadownloaduploadTypeGET08501E5D",
        "testVermontKidsDatadownloaduploadType3D975FD0",
        "testVermontKidsDatadownloadAC79A169",
        "testVermontKidsDataoauthcallbackGET994DBE8B",
        "testVermontKidsDataoauthcallbackOPTIONSE95BCC4B",
        "testVermontKidsDataoauthcallback82EDC1D5",
        "testVermontKidsDataqueriesidDELETE5AB50180",
        "testVermontKidsDataqueriesidGET81838D80",
        "testVermontKidsDataqueriesidOPTIONS6C956D6C",
        "testVermontKidsDataqueriesidPUTD931B479",
        "testVermontKidsDataqueriesid98F2826C",
        "testVermontKidsDataqueriesGETEB6EC073",
        "testVermontKidsDataqueriesOPTIONSB95DAF7C",
        "testVermontKidsDataqueriesPOST29F882E5",
        "testVermontKidsDataqueries63BE02C3",
        "testVermontKidsDatasessionendGETE7D7E13C",
        "testVermontKidsDatasessionend37F5CCD5",
        "testVermontKidsDatasessionGET34E9611D",
        "testVermontKidsDatasession8095ACB5",
        "testVermontKidsDatatablecensustablegeoTypeGETF5C9BB28",
        "testVermontKidsDatatablecensustablegeoTypeFFED038B",
        "testVermontKidsDatatablecensustableFECE0E80",
        "testVermontKidsDatatablecensusD8D4649B",
        "testVermontKidsDatatableOPTIONS2601EA66",
        "testVermontKidsDatatable08F0671A",
        "testVermontKidsDatatablequeryIdGETF20250C9",
        "testVermontKidsDatatablequeryId48027E8F",
        "testVermontKidsDatatable628FD5C7",
        "testVermontKidsDatatestdbGET1366231E",
        "testVermontKidsDatatestdb719EE2FE",
        "testVermontKidsDatauploaduploadIdGET9AFE8630",
        "testVermontKidsDatauploaduploadId7971A4C2",
        "testVermontKidsDatauploadOPTIONSB49CCAFD",
        "testVermontKidsDataupload9F7CBA80",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "testVermontKidsDataDeploymentStageprod8BC7562D": {
      "DependsOn": [
        "testVermontKidsDataAccountD57F099F",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "testVermontKidsDataDeployment82D2B8C77ba80a8dec59e018caf496a76cdb3006",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "testVermontKidsDataapidocsyamlD0CA29BA": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "apidocs.yaml",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDataapidocsyamlGET2432E319": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "APIDocBucketRole36E5CFCE",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
            {
              "StatusCode": "400",
            },
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:s3:path/",
                {
                  "Ref": "Docsbucket48971E37",
                },
                "/test-TestStack.yaml",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty",
            },
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDataapidocsyamlD0CA29BA",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatachart586643EF": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "chart",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatachartOPTIONS88BF083C": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://ui.test.vtkidsdata.org/admin'",
                "method.response.header.Vary": "'Origin'",
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params().header.get("Origin"))
#if($origin == "")
  #set($origin = $input.params().header.get("origin"))
#end
#if($origin == "http://localhost:3000")
  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)
#end",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDatachart586643EF",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatachartbar0896C591": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatachart586643EF",
        },
        "PathPart": "bar",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatachartbarqueryId1B9FDE04": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatachartbar0896C591",
        },
        "PathPart": "{queryId}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatachartbarqueryIdGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETchartbarqueryId980EABB5": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BarChartAPIFunction8D100D69",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/chart/bar/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatachartbarqueryIdGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETchartbarqueryIdA502C6E4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BarChartAPIFunction8D100D69",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/chart/bar/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatachartbarqueryIdGETD88F41A0": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BarChartAPIFunction8D100D69",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatachartbarqueryId1B9FDE04",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatacodes32B0A0D2": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "codes",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodesOPTIONS8255224F": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://ui.test.vtkidsdata.org/admin'",
                "method.response.header.Vary": "'Origin'",
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params().header.get("Origin"))
#if($origin == "")
  #set($origin = $input.params().header.get("origin"))
#end
#if($origin == "http://localhost:3000")
  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)
#end",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDatacodes32B0A0D2",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatacodescensus2CD906C7": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatacodes32B0A0D2",
        },
        "PathPart": "census",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodescensustables4DB02FB1": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatacodescensus2CD906C7",
        },
        "PathPart": "tables",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodescensustablessearchF7A0BEBD": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatacodescensustables4DB02FB1",
        },
        "PathPart": "search",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodescensustablessearchGET469EB96E": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetCensusTablesSearchFunctionE5D75F9E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatacodescensustablessearchF7A0BEBD",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatacodescensustablessearchGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETcodescensustablessearch10D8B57A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetCensusTablesSearchFunctionE5D75F9E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/codes/census/tables/search",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacodescensustablessearchGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETcodescensustablessearchB69AC08C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetCensusTablesSearchFunctionE5D75F9E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/codes/census/tables/search",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacodescensusvariables22373B03": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatacodescensus2CD906C7",
        },
        "PathPart": "variables",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodescensusvariablestable1D6C3BED": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatacodescensusvariables22373B03",
        },
        "PathPart": "{table}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodescensusvariablestableGETA1F464BE": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CodesCensusVariablesByTableFunctionF5F759B7",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatacodescensusvariablestable1D6C3BED",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatacodescensusvariablestableGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETcodescensusvariablestableBE347D24": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CodesCensusVariablesByTableFunctionF5F759B7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/codes/census/variables/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacodescensusvariablestableGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETcodescensusvariablestable76042167": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CodesCensusVariablesByTableFunctionF5F759B7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/codes/census/variables/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacodesgeos7A77D4EF": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatacodes32B0A0D2",
        },
        "PathPart": "geos",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodesgeosgeoTypeCB9C8A50": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatacodesgeos7A77D4EF",
        },
        "PathPart": "{geoType}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacodesgeosgeoTypeGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETcodesgeosgeoType9C980682": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetGeosbyTypeFunctionE6591A7E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/codes/geos/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacodesgeosgeoTypeGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETcodesgeosgeoType9B8A42DB": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetGeosbyTypeFunctionE6591A7E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/codes/geos/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacodesgeosgeoTypeGETE577E04D": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetGeosbyTypeFunctionE6591A7E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatacodesgeosgeoTypeCB9C8A50",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatacredentialsF328366F": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "credentials",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatacredentialsGET881864AE": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "requestauthorizerD239B518",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CredentialsfunctionB73FF502",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "401",
          },
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "403",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDatacredentialsF328366F",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatacredentialsGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETcredentials835198E2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CredentialsfunctionB73FF502",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/credentials",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacredentialsGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETcredentials63014125": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CredentialsfunctionB73FF502",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/credentials",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatacredentialsOPTIONSFEB59669": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://ui.test.vtkidsdata.org/admin'",
                "method.response.header.Vary": "'Origin'",
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params().header.get("Origin"))
#if($origin == "")
  #set($origin = $input.params().header.get("origin"))
#end
#if($origin == "http://localhost:3000")
  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)
#end",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDatacredentialsF328366F",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatadashboardA8315A8C": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "dashboard",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatadashboardOPTIONS299AC35B": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://ui.test.vtkidsdata.org/admin'",
                "method.response.header.Vary": "'Origin'",
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params().header.get("Origin"))
#if($origin == "")
  #set($origin = $input.params().header.get("origin"))
#end
#if($origin == "http://localhost:3000")
  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)
#end",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDatadashboardA8315A8C",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatadashboardcheck87818EFA": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatadashboardA8315A8C",
        },
        "PathPart": "check",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatadashboardcheckGET171EB08D": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DashboardcheckAPIFunction144C838C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatadashboardcheck87818EFA",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatadashboardcheckGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETdashboardcheck644BFFCE": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DashboardcheckAPIFunction144C838C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/dashboard/check",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadashboardcheckGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETdashboardcheck0117A19F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DashboardcheckAPIFunction144C838C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/dashboard/check",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadatasetD39C03ED": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "dataset",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatadatasetOPTIONSCBDAE62E": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://ui.test.vtkidsdata.org/admin'",
                "method.response.header.Vary": "'Origin'",
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params().header.get("Origin"))
#if($origin == "")
  #set($origin = $input.params().header.get("origin"))
#end
#if($origin == "http://localhost:3000")
  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)
#end",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDatadatasetD39C03ED",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatadatasetbackups61E152F2": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatadatasetD39C03ED",
        },
        "PathPart": "backups",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatadatasetbackupsdataset2CB8887C": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatadatasetbackups61E152F2",
        },
        "PathPart": "{dataset}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatadatasetbackupsdatasetGET17AAE0B4": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ListDatasetBackupsFunction0650E3F1",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatadatasetbackupsdataset2CB8887C",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatadatasetbackupsdatasetGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETdatasetbackupsdatasetE615EB60": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ListDatasetBackupsFunction0650E3F1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/dataset/backups/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadatasetbackupsdatasetGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETdatasetbackupsdataset1A2F8E69": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ListDatasetBackupsFunction0650E3F1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/dataset/backups/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadatasetbackupsdatasetversionA7A5FA0E": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatadatasetbackupsdataset2CB8887C",
        },
        "PathPart": "{version}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatadatasetbackupsdatasetversionGET918F2D32": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetDatasetBackupFunction960C1285",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatadatasetbackupsdatasetversionA7A5FA0E",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatadatasetbackupsdatasetversionGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETdatasetbackupsdatasetversion4035722F": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetDatasetBackupFunction960C1285",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/dataset/backups/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadatasetbackupsdatasetversionGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETdatasetbackupsdatasetversion9CB3483E": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetDatasetBackupFunction960C1285",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/dataset/backups/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadatasetbackupsdatasetversionrevert6D14AFD2": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatadatasetbackupsdatasetversionA7A5FA0E",
        },
        "PathPart": "revert",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatadatasetbackupsdatasetversionrevertPOSTApiPermissionTesttestTestStacktestVermontKidsData62A09AC6POSTdatasetbackupsdatasetversionrevert7FCAE24D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DatasetRevertFunction219B9FBB",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/POST/dataset/backups/*/*/revert",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadatasetbackupsdatasetversionrevertPOSTApiPermissiontestTestStacktestVermontKidsData62A09AC6POSTdatasetbackupsdatasetversionrevert2C6D822C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DatasetRevertFunction219B9FBB",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/POST/dataset/backups/*/*/revert",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadatasetbackupsdatasetversionrevertPOSTDF5ECC4B": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "requestauthorizerD239B518",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DatasetRevertFunction219B9FBB",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "401",
          },
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "403",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDatadatasetbackupsdatasetversionrevert6D14AFD2",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatadatasetdatasetC15A3388": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatadatasetD39C03ED",
        },
        "PathPart": "{dataset}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatadatasetdatasetPOSTApiPermissionTesttestTestStacktestVermontKidsData62A09AC6POSTdatasetdatasetDC2F8FA0": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DatasetpostAPIFunctionB555A2CF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/POST/dataset/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadatasetdatasetPOSTApiPermissiontestTestStacktestVermontKidsData62A09AC6POSTdatasetdatasetE89C2A8C": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DatasetpostAPIFunctionB555A2CF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/POST/dataset/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadatasetdatasetPOSTD4665036": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "requestauthorizerD239B518",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DatasetpostAPIFunctionB555A2CF",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "401",
          },
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "403",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDatadatasetdatasetC15A3388",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatadatasetyears672FB4DC": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatadatasetD39C03ED",
        },
        "PathPart": "years",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatadatasetyearsdataset9B3C2388": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatadatasetyears672FB4DC",
        },
        "PathPart": "{dataset}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatadatasetyearsdatasetGETABE2E121": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetYearsFunction1A78275F",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatadatasetyearsdataset9B3C2388",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatadatasetyearsdatasetGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETdatasetyearsdataset325E2F41": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetYearsFunction1A78275F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/dataset/years/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadatasetyearsdatasetGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETdatasetyearsdatasetDB9D441D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetYearsFunction1A78275F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/dataset/years/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadownloadAC79A169": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "download",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatadownloaduploadType3D975FD0": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatadownloadAC79A169",
        },
        "PathPart": "{uploadType}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatadownloaduploadTypeGET08501E5D": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DownloadFunction40EABBE7",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatadownloaduploadType3D975FD0",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatadownloaduploadTypeGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETdownloaduploadType3C37FC9D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DownloadFunction40EABBE7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/download/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatadownloaduploadTypeGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETdownloaduploadTypeD8EBD4E0": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DownloadFunction40EABBE7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/download/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataoauthcallback82EDC1D5": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "oauthcallback",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDataoauthcallbackGET994DBE8B": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "OAuthcallbackfunctionBEA96A5A",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "401",
          },
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "403",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDataoauthcallback82EDC1D5",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDataoauthcallbackGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GEToauthcallbackE7966821": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "OAuthcallbackfunctionBEA96A5A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/oauthcallback",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataoauthcallbackGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GEToauthcallback1BF8A917": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "OAuthcallbackfunctionBEA96A5A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/oauthcallback",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataoauthcallbackOPTIONSE95BCC4B": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://ui.test.vtkidsdata.org/admin'",
                "method.response.header.Vary": "'Origin'",
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params().header.get("Origin"))
#if($origin == "")
  #set($origin = $input.params().header.get("origin"))
#end
#if($origin == "http://localhost:3000")
  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)
#end",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDataoauthcallback82EDC1D5",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDataqueries63BE02C3": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "queries",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDataqueriesGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETqueries5AED5D49": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QueriesgetListAPIFunctionFF4BF43F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/queries",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataqueriesGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETqueries9305EFC8": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QueriesgetListAPIFunctionFF4BF43F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/queries",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataqueriesGETEB6EC073": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "requestauthorizerD239B518",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "QueriesgetListAPIFunctionFF4BF43F",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "401",
          },
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "403",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDataqueries63BE02C3",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDataqueriesOPTIONSB95DAF7C": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://ui.test.vtkidsdata.org/admin'",
                "method.response.header.Vary": "'Origin'",
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params().header.get("Origin"))
#if($origin == "")
  #set($origin = $input.params().header.get("origin"))
#end
#if($origin == "http://localhost:3000")
  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)
#end",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDataqueries63BE02C3",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDataqueriesPOST29F882E5": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "requestauthorizerD239B518",
        },
        "HttpMethod": "POST",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "QueriespostAPIFunction47276EF8",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "401",
          },
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "403",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDataqueries63BE02C3",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDataqueriesPOSTApiPermissionTesttestTestStacktestVermontKidsData62A09AC6POSTqueries39E26C48": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QueriespostAPIFunction47276EF8",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/POST/queries",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataqueriesPOSTApiPermissiontestTestStacktestVermontKidsData62A09AC6POSTqueriesF4296029": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QueriespostAPIFunction47276EF8",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/POST/queries",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataqueriesid98F2826C": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDataqueries63BE02C3",
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDataqueriesidDELETE5AB50180": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "requestauthorizerD239B518",
        },
        "HttpMethod": "DELETE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "QueriesdeleteAPIFunction2A72083B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "401",
          },
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "403",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDataqueriesid98F2826C",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDataqueriesidDELETEApiPermissionTesttestTestStacktestVermontKidsData62A09AC6DELETEqueriesid552829A8": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QueriesdeleteAPIFunction2A72083B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/DELETE/queries/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataqueriesidDELETEApiPermissiontestTestStacktestVermontKidsData62A09AC6DELETEqueriesid8B841B2B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QueriesdeleteAPIFunction2A72083B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/DELETE/queries/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataqueriesidGET81838D80": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "requestauthorizerD239B518",
        },
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "QueriesgetAPIFunction12B2D06C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "401",
          },
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "403",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDataqueriesid98F2826C",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDataqueriesidGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETqueriesidBF7EAD50": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QueriesgetAPIFunction12B2D06C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/queries/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataqueriesidGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETqueriesidAFF4B551": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QueriesgetAPIFunction12B2D06C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/queries/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataqueriesidOPTIONS6C956D6C": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://ui.test.vtkidsdata.org/admin'",
                "method.response.header.Vary": "'Origin'",
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params().header.get("Origin"))
#if($origin == "")
  #set($origin = $input.params().header.get("origin"))
#end
#if($origin == "http://localhost:3000")
  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)
#end",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDataqueriesid98F2826C",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDataqueriesidPUTApiPermissionTesttestTestStacktestVermontKidsData62A09AC6PUTqueriesid5C3447F1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QueriesputAPIFunction37E4BF37",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/PUT/queries/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataqueriesidPUTApiPermissiontestTestStacktestVermontKidsData62A09AC6PUTqueriesid85C38F85": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QueriesputAPIFunction37E4BF37",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/PUT/queries/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataqueriesidPUTD931B479": {
      "Properties": {
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "requestauthorizerD239B518",
        },
        "HttpMethod": "PUT",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "QueriesputAPIFunction37E4BF37",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "401",
          },
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "403",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDataqueriesid98F2826C",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatasession8095ACB5": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "session",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatasessionGET34E9611D": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetSessionfunction0C2A1268",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatasession8095ACB5",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatasessionGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETsessionBC363847": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetSessionfunction0C2A1268",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/session",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatasessionGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETsessionDD2ECFB1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetSessionfunction0C2A1268",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/session",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatasessionend37F5CCD5": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatasession8095ACB5",
        },
        "PathPart": "end",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatasessionendGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETsessionend29A264D4": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteSessionfunction5693F658",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/session/end",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatasessionendGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETsessionendB1DD6951": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteSessionfunction5693F658",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/session/end",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatasessionendGETE7D7E13C": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteSessionfunction5693F658",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatasessionend37F5CCD5",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatatable08F0671A": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "table",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatable628FD5C7": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatatable08F0671A",
        },
        "PathPart": "table",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatableOPTIONS2601EA66": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://ui.test.vtkidsdata.org/admin'",
                "method.response.header.Vary": "'Origin'",
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params().header.get("Origin"))
#if($origin == "")
  #set($origin = $input.params().header.get("origin"))
#end
#if($origin == "http://localhost:3000")
  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)
#end",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDatatable08F0671A",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatatablecensusD8D4649B": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatatable08F0671A",
        },
        "PathPart": "census",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatablecensustableFECE0E80": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatatablecensusD8D4649B",
        },
        "PathPart": "{table}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatablecensustablegeoTypeFFED038B": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatatablecensustableFECE0E80",
        },
        "PathPart": "{geoType}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatablecensustablegeoTypeGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETtablecensustablegeoTypeD9A196E8": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CensusTableByGeoFunction1EF3A681",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/table/census/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatatablecensustablegeoTypeGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETtablecensustablegeoType65D309D9": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CensusTableByGeoFunction1EF3A681",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/table/census/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatatablecensustablegeoTypeGETF5C9BB28": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CensusTableByGeoFunction1EF3A681",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatatablecensustablegeoTypeFFED038B",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatatablequeryId48027E8F": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDatatable628FD5C7",
        },
        "PathPart": "{queryId}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatablequeryIdGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETtabletablequeryIdC2CE2FF2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BasictableAPIFunction7BA08608",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/table/table/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatatablequeryIdGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETtabletablequeryId4B9B498A": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BasictableAPIFunction7BA08608",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/table/table/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatatablequeryIdGETF20250C9": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BasictableAPIFunction7BA08608",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatatablequeryId48027E8F",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatatestdb719EE2FE": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "testdb",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatatestdbGET1366231E": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "TestDBFunction6436BF3A",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatatestdb719EE2FE",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatatestdbGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETtestdbDBDC845D": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "TestDBFunction6436BF3A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/testdb",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatatestdbGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETtestdb90A8E403": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "TestDBFunction6436BF3A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/testdb",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDataupload9F7CBA80": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "testVermontKidsDataCC7D0909",
            "RootResourceId",
          ],
        },
        "PathPart": "upload",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatauploadOPTIONSB49CCAFD": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Origin": "'https://ui.test.vtkidsdata.org/admin'",
                "method.response.header.Vary": "'Origin'",
              },
              "ResponseTemplates": {
                "application/json": "#set($origin = $input.params().header.get("Origin"))
#if($origin == "")
  #set($origin = $input.params().header.get("origin"))
#end
#if($origin == "http://localhost:3000")
  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)
#end",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": {
          "Ref": "testVermontKidsDataupload9F7CBA80",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatauploaduploadId7971A4C2": {
      "Properties": {
        "ParentId": {
          "Ref": "testVermontKidsDataupload9F7CBA80",
        },
        "PathPart": "{uploadId}",
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testVermontKidsDatauploaduploadIdGET9AFE8630": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:aq-south-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UploadStatusFunction296B6E97",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": {
          "Ref": "testVermontKidsDatauploaduploadId7971A4C2",
        },
        "RestApiId": {
          "Ref": "testVermontKidsDataCC7D0909",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testVermontKidsDatauploaduploadIdGETApiPermissionTesttestTestStacktestVermontKidsData62A09AC6GETuploaduploadId8E924CA1": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UploadStatusFunction296B6E97",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/test-invoke-stage/GET/upload/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "testVermontKidsDatauploaduploadIdGETApiPermissiontestTestStacktestVermontKidsData62A09AC6GETuploaduploadId7A7AB6E3": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "UploadStatusFunction296B6E97",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":execute-api:aq-south-1:999999999:",
              {
                "Ref": "testVermontKidsDataCC7D0909",
              },
              "/",
              {
                "Ref": "testVermontKidsDataDeploymentStageprod8BC7562D",
              },
              "/GET/upload/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "usersgrouprole5142F148": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": {
                    "Ref": "identitypool",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Default role for authenticated users",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "s3:PutObject",
                    "s3:PutObjectTagging",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "Uploadsbucket86F42938",
                            "Arn",
                          ],
                        },
                        "/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "s3Policy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
